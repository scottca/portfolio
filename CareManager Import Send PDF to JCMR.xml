<connector>
  <name>Send PDF to JCMR</name>
  <properties>
    <property name="DataType">File Writer</property>
    <property name="FTPAnonymous">0</property>
    <property name="binary">1</property>
    <property name="charsetEncoding">DEFAULT_ENCODING</property>
    <property name="host">10.2.74.161/ED</property>
    <property name="outputAppend">1</property>
    <property name="outputPattern">${pdfFileName}.pdf</property>
    <property name="passive">1</property>
    <property name="password">Foote123</property>
    <property name="scheme">ftp</property>
    <property name="secure">1</property>
    <property name="template">${pdfFileBytes}</property>
    <property name="timeout">10000</property>
    <property name="username">ftpuser</property>
    <property name="validateConnections">1</property>
  </properties>
  <transformer>
    <steps/>
    <inboundTemplate encoding="base64">PHJlcG9ydD4NCiAgICA8ZW5jPjEwMjA0MzkzPC9lbmM+DQogICAgPG1yPjg3NzQyMTwvbXI+DQog
ICAgPHJlcG9ydF90eXBlPk9DUjwvcmVwb3J0X3R5cGU+DQogICAgPHJlcG9ydF9kYXRlPjA3LzAx
LzEyPC9yZXBvcnRfZGF0ZT4NCiAgICA8cHNGaWxlQnl0ZXM+PCFbQ0RBVEFbJSVzdGFydA0KJW1y
biU4Nzc0MjENCiVmYWMlMDEgDQolZ3BpJQ0KJWVuYyUxMDIwNDM5Mw0KJWRhdGUlMDcvMDEvMTJe
MTY6MjYNCiVyZXBvcnRfdHlwZSVPQ1JSRVANCiVyZXBvcnRfc3VidGl0bGUlT3JkZXIgQ29uZmly
bWF0aW9uIFJlcG9ydA0KJXBoeXNfaWQxJSAgIA0KJXBoeXNfaWQyJSAgIA0KJSVQYWdlczogMQ0K
JSFQUy1BZG9iZQ0KJSVUaXRsZTogKG9yZGVyTm90ZXNfMSkNCiUlQ3JlYXRpb25EYXRlOiAwNy8w
Mi8xMiAxNjoyNg0KJSVGb3I6IFNISUZUIFNVUCBNQ0NSVU0sIEpFU1NJQ0ENCiUlTGFuZ3VhZ2VM
ZXZlbDogMQ0KJSVQYWdlczogKGF0ZW5kKQ0KJSVFbmRDb21tZW50cw0KJSVCZWdpblByb2xvZw0K
MjAwIGRpY3QgYmVnaW4gJXsNCiUgYXBwZW5kX3BzKCBwc2xpYi9zdGFuZGFyZC5wcyApDQovRElD
VCB7IGR1cCBkdXAgMCBleGNoIDAgZ2V0IDEgYWRkIGRpY3QgcHV0DQpkdXAgMCBnZXQgLzpOTTog
MyBpbmRleCBwdXQNCn1iaW5kIGRlZg0KLz9OTSB7IGN1cnJlbnRkaWN0IC86Tk06IGtub3duIHs6
Tk06fXsobm90IGRlZmluZWQpfWlmZWxzZSA9PQ0KfWJpbmQgZGVmDQovTUFYIHsgMiBjb3B5IGx0
IHsgZXhjaCB9IGlmIHBvcCB9IGJpbmQgZGVmDQovTUlOIHsgMiBjb3B5IGd0IHsgZXhjaCB9IGlm
IHBvcCB9IGJpbmQgZGVmDQovTUFYZGVmIHsgZXhjaCAxIGluZGV4IGxvYWQgTUFYIGRlZiB9IGJp
bmQgZGVmDQovTUlOZGVmIHsgZXhjaCAxIGluZGV4IGxvYWQgTUlOIGRlZiB9IGJpbmQgZGVmDQov
TEVGVCB7IDEgaW5kZXggbGVuZ3RoIE1JTiAwIGV4Y2ggZ2V0aW50ZXJ2YWwgfSBiaW5kIGRlZg0K
L1NVTSB7IDAgZXhjaCB7IGFkZCB9IGZvcmFsbCB9IGJpbmQgZGVmDQovSU5DSF9ERUYgeyA3Mi4g
bXVsIGRlZiB9IGJpbmQgZGVmDQovQUREIHsgMSBpbmRleCBsb2FkIGFkZCBkZWYgfSBiaW5kIGRl
Zg0KL1NVQiB7IG5lZyAxIGluZGV4IGxvYWQgYWRkIGRlZiB9IGJpbmQgZGVmDQovKysgeyBkdXAg
bG9hZCAxIGFkZCBkZWYgfSBiaW5kIGRlZg0KL1NUUkNBVA0KezIgYmVnaW4NCi9CIGV4Y2ggZGVm
DQovQSBleGNoIGRlZg0KQSBsZW5ndGggQiBsZW5ndGggYWRkIHN0cmluZw0KZHVwIDAgQSBwdXRp
bnRlcnZhbA0KZHVwIEEgbGVuZ3RoIEIgcHV0aW50ZXJ2YWwNCmVuZA0KfURJQ1QgYmluZCBkZWYN
Ci9UUkFOUyBmYWxzZSBkZWYNCi9DWCB7IGN1cnJlbnRwb2ludCBwb3AgfSBiaW5kIGRlZg0KL0NZ
IHsgY3VycmVudHBvaW50IGV4Y2ggcG9wIH0gYmluZCBkZWYNCi9TVyB7IHN0cmluZ3dpZHRoIHBv
cCB9IGJpbmQgZGVmDQovU0ZBIHt7c2hvd31mb3JhbGx9IGJpbmQgZGVmDQovTVMgeyBtb3ZldG8g
c2hvdyB9IGJpbmQgZGVmDQovck1TIHsgcm1vdmV0byBzaG93IH0gYmluZCBkZWYNCi9SUyB7IG1v
dmV0byAxIGluZGV4IFNXIHN1YiAwLiBybW92ZXRvIHNob3cgfSBiaW5kIGRlZg0KL0NTIHsgbW92
ZXRvIDEgaW5kZXggU1cgc3ViIC41IG11bCAwLiBybW92ZXRvIHNob3cgfSBiaW5kIGRlZg0KL0NB
IHsgZXhjaCAyIGluZGV4IFNXIC41IG11bCBzdWIgZXhjaCBtb3ZldG8gc2hvdyB9IGJpbmQgZGVm
DQovTEYgMTQuIGRlZg0KL2RuTEYgeyAwLiBMRiBuZWcgcm1vdmV0byB9IGJpbmQgZGVmDQovdXBM
RiB7IDAuIExGIHJtb3ZldG8gfSBiaW5kIGRlZg0KL1ZTIHsgeyBjdXJyZW50cG9pbnQNCiggKSBk
dXAgMCA1IGluZGV4IHB1dA0KZHVwIFNXIC0uNSBtdWwgMC4gcm1vdmV0byBzaG93DQpMRiBzdWIg
bW92ZXRvDQpwb3ANCn1mb3JhbGwNCn1iaW5kIGRlZg0KL1ZMIHsgbW92ZXRvIDAuIGV4Y2ggcmxp
bmV0byB9IGJpbmQgZGVmDQovSEwgeyBtb3ZldG8gMC4gcmxpbmV0byB9IGJpbmQgZGVmDQovclZM
IHsgcm1vdmV0byAwLiBleGNoIHJsaW5ldG8gfSBiaW5kIGRlZg0KL3JITCB7IHJtb3ZldG8gMC4g
cmxpbmV0byB9IGJpbmQgZGVmDQovUEdfV0lEVEggOC4gSU5DSF9ERUYgDQovdnBvcyAxMC43NSBJ
TkNIX0RFRg0KL2hwb3MgMC4yNSBJTkNIX0RFRg0KL3Jwb3MgOC4wIElOQ0hfREVGDQovYnBvcyAw
LjI1IElOQ0hfREVGDQovaGhvbGQgMC4wIGRlZg0KL2hob2xkJyAwLjAgZGVmDQovdmhvbGQgMC4w
IGRlZg0KL3Zob2xkJyAwLjAgZGVmDQovUEdfSEwgeyAwLiBleGNoIG1vdmV0byBQR19XSURUSCAw
LiBybGluZXRvIHN0cm9rZSB9IGJpbmQgZGVmIA0KL1BHX0NFTlRFUiB7IFBHX1dJRFRIIDIgaW5k
ZXggeyBTVyBzdWIgfSBmb3JhbGwNCi41IG11bCBleGNoIG1vdmV0byBTRkENCn1iaW5kIGRlZg0K
L05FV0ZPTlQgeyA2IGJlZ2luDQpRS05NDQpEOkZPTlRTIGR1cCBiZWdpbiBRTiBrbm93bg0Ke3Bv
cCBwb3AgUU4gbG9hZCAgfQ0Ke2V4Y2ggZmluZGZvbnQgZXhjaCBzY2FsZWZvbnQNClFOIDEgaW5k
ZXggZGVmDQp9aWZlbHNlDQplbmQgJSBEOkZPTlRTDQplbmQgJSBsb2NhbCBkaWN0DQpkZWYgJSBm
b250IGFzIC91c2VybmFtZSBpbiBjdXJyZW50ZGljdA0KfURJQ1QgYmluZCBkZWYNCi9ORVdGT05U
IGxvYWQgMCBnZXQgYmVnaW4NCi9EOkZPTlRTIDI1IGRpY3QgZGVmDQovU3RyIDUgc3RyaW5nIGRl
Zg0KL1FLTk0geyAvU1ogMSBpbmRleCAtMTAuIG11bCBjdmkgU3RyIGN2cyBkZWYNCi9MX0ZOIDIg
aW5kZXggbGVuZ3RoIGRlZg0KL1FOIExfRk4gU1ogbGVuZ3RoIGFkZCBzdHJpbmcgZGVmDQoxIGlu
ZGV4IFFOIGN2cyBwb3ANClFOIExfRk4gU1ogcHV0aW50ZXJ2YWwNCn1iaW5kIGRlZg0KZW5kDQov
SFZCNiAgeyAvSFZCNiAgL0hlbHZldGljYS1Cb2xkICA2LiBORVdGT05UIEhWQjYgIH0gZGVmDQov
SFZCOSAgeyAvSFZCOSAgL0hlbHZldGljYS1Cb2xkICA5LiBORVdGT05UIEhWQjkgIH0gZGVmDQov
SFYxMCAgeyAvSFYxMCAgL0hlbHZldGljYSAgICAgIDEwLiBORVdGT05UIEhWMTAgIH0gZGVmDQov
SFZCMTAgeyAvSFZCMTAgL0hlbHZldGljYS1Cb2xkIDEwLiBORVdGT05UIEhWQjEwIH0gZGVmDQov
TGlnaHQgLjkgZGVmDQovRGFyayAuODUgZGVmICAgJSBDUiAyMDAwOTc1NQ0KL1NIQURFIHsgZ3Nh
dmUgJXsNCnNldGdyYXkgZHVwIHNldGxpbmV3aWR0aCAuNSBtdWwNCjAuIGV4Y2ggcm1vdmV0byAw
LiBybGluZXRvIHN0cm9rZQ0KZ3Jlc3RvcmUgJX0NCn1iaW5kIGRlZg0KL1NIUklOS19UT19GSVQg
ICUgc3RhY2s6IHN0cmluZyBzcGFjZWF2YWlsIHggeQ0KezQgYmVnaW4NCmdzYXZlDQoveVBvcyBl
eGNoIGRlZg0KL3hQb3MgZXhjaCBkZWYNCi9TQSBleGNoIGRlZg0KL1N0ciBleGNoIGRlZg0KU0Eg
U3RyIFNXIGdlIHsgU3RyIFNBIHhQb3MgeVBvcyBDUyB9DQp7Y3VycmVudGZvbnQgLjg3NSBzY2Fs
ZWZvbnQgc2V0Zm9udA0Ke1NBIFN0ciBTVyBnZSB7IFN0ciBTQSB4UG9zIHlQb3MgQ1MgZXhpdCB9
IGlmICUgaXQgZml0cy4NCmN1cnJlbnRmb250IC44NzUgc2NhbGVmb250IHNldGZvbnQNCn1sb29w
DQp9aWZlbHNlDQpncmVzdG9yZQ0KZW5kDQp9RElDVCBiaW5kIGRlZg0KL01TUVogeyBtb3ZldG8g
U1FaIH0gYmluZCBkZWYNCi9TUVoNCnsyIGJlZ2luDQoyIGNvcHkgZXhjaCBTVyBnZQ0Ke3BvcCBz
aG93IH0NCnsvU0EgZXhjaCAuODc1IGRpdiBkZWYgJSBhZGp1c3RlZCBTcGFjZSBBdmFpbGFibGUN
Ci9TdHIgZXhjaCBkZWYNCm1hdHJpeCBjdXJyZW50bWF0cml4DQouODc1IDEuIHNjYWxlICAgICAg
ICUgYWRqdXN0IGZvbnR3aWR0aA0Ke1NBIFN0ciBTVyBnZSB7IFN0ciBzaG93IGV4aXQgfSBpZiAl
IGl0IGZpdHMNCi9TdHIgU3RyIDAgMSBpbmRleCBsZW5ndGggMSBzdWIgZ2V0aW50ZXJ2YWwgZGVm
ICUgZHJvcCBhIGxldHRlcg0KfWxvb3ANCnNldG1hdHJpeA0KfWlmZWxzZQ0KZW5kDQp9RElDVCBi
aW5kIGRlZg0KL0JPWCB7IG1vdmV0byAxIGluZGV4IDAuIHJsaW5ldG8gMC4gZXhjaCBybGluZXRv
IG5lZyAwLiBybGluZXRvDQpjbG9zZXBhdGggc3Ryb2tlDQp9YmluZCBkZWYNCi9DSEVDS19CT1gg
DQp7Z3NhdmUNCi9ZIGV4Y2ggZGVmDQovWCBleGNoIGRlZg0KL2hlaWdodCBleGNoIGRlZg0KL3dp
ZHRoIGV4Y2ggZGVmDQpoZWlnaHQgd2lkdGggWCAxIGFkZCBZIDEgc3ViDQouNSBzZXRsaW5ld2lk
dGggbW92ZXRvIA0KMSBpbmRleCAwLiBybGluZXRvIDAuIGV4Y2ggcmxpbmV0byBuZWcgMC4gcmxp
bmV0bw0KY2xvc2VwYXRoIHN0cm9rZQ0KZ3Jlc3RvcmUNCn1iaW5kIGRlZg0KL1ZCIHsgMiBiZWdp
bg0KL1kgZXhjaCBkZWYgL0hUIFZCX0hUIGRlZg0KMC4gWSB0cmFuc2xhdGUNClZCX0FSUkFZIHsg
MC4gbW92ZXRvIDAuIEhUIHJsaW5ldG8gfSBmb3JhbGwgc3Ryb2tlDQowLiBZIG5lZyB0cmFuc2xh
dGUNCmVuZA0KfURJQ1QgYmluZCBkZWYNCi9QQl9XIDIuMjUgSU5DSF9ERUYgICUgd2lkdGgNCi9Q
Ql9IIDg1LiBkZWYgICAgICAgICUgaGVpZ2h0IGluIHBvaW50cw0KL1BCX1ggIDguICA3Mi4gbXVs
IFBCX1cgc3ViIGRlZiAlIGxlZnQgc2lkZSBvZiBEZW1vZ3JhcGhpYyBibG9jaw0KL1BCX1kgL3Zw
b3Mgd2hlcmV7cG9wIHZwb3N9ezc1MC4gUEJfSCBzdWJ9aWZlbHNlIGRlZiAlIGJvdHRvbQ0KL1BC
X0xJTkUgICAgICAgICAgICAgICAlIGxpbmUjIC0tIHggeQ0KezguIG11bCBQQl9ZIGFkZCAzLiBh
ZGQgUEJfWCAyLiBhZGQgZXhjaA0KfWJpbmQgZGVmDQovUEFHRV9GTEFHIDIgZGVmDQovUEdOTyAx
IGRlZg0KL1BBR0UgDQp7KFBhZ2U6ICkgc2hvdyANClBHTk8gNSBzdHJpbmcgY3ZzIHNob3cgDQp9
YmluZCBkZWYNCi9GU19QQUdFICgpIGRlZg0KL0lOVEVSSU1fQkxLDQp7L1ggcnBvcyAxMDguIHN1
YiBkZWYgIA0KWCAwLiBtb3ZldG8NCjEwOC4gMTguIExpZ2h0IFNIQURFDQpjdXJyZW50Zm9udA0K
SFZCOSBzZXRmb250IChJTlRFUklNKSAxMDguIFggNi4gQ1MNCnNldGZvbnQNCjEwOC4gMTguIFgg
MC4gQk9YDQp9YmluZCBkZWYNCi9QRVJNX0JMSw0Key9YIHJwb3MgNTQuIHN1YiBkZWYNClggMC4g
bW92ZXRvDQo1NC4gMTguIExpZ2h0IFNIQURFDQpjdXJyZW50Zm9udA0KSFZCOSBzZXRmb250IChQ
RVJNKSA1NC4gWCA2LiBDUw0Kc2V0Zm9udA0KNTQuIDE4LiBYIDAuIEJPWA0KfWJpbmQgZGVmDQov
RDpMX0hkcl9TSCAxMiBkaWN0IGRlZg0KL0xfSGRyX1NIICAgJSBMX0hkcl9uIC0tDQp7L1ggY3Vy
cmVudHBvaW50IDguIHN1YiAvWSBleGNoIGRlZiBkZWYNClggWSBtb3ZldG8NCjAgMiAyIGluZGV4
IGxlbmd0aCAxIHN1Yg0KezIgY29weSBnZXQgc2hvdw0KWCAyNCBhZGQgWSBtb3ZldG8NCjEgaW5k
ZXggZXhjaCAxIGFkZCBnZXQgc2hvdw0KL1kgLTguIEFERA0KWCBZIG1vdmV0bw0KfWZvciBwb3AN
Cn1iaW5kIGRlZg0KL0Q6Q0xJTklSRVAgMjUgZGljdCBkZWYNCkQ6Q0xJTklSRVAgYmVnaW4gJXsN
Ci86Tk06IC9EOkNMSU5JUkVQIGRlZg0KL0xBU1RfUEFHRSB7IGN1cnJlbnRmb250DQpIVjEwIHNl
dGZvbnQgWyhMQVNUIFBBR0UpXSBicG9zIDIxLiBhZGQgUEdfQ0VOVEVSDQpzZXRmb250DQp9Ymlu
ZCBkZWYNCi9DT05USU5VRUQgeyBjdXJyZW50Zm9udA0KSFYxMCBzZXRmb250IFsoQ09OVElOVUVE
KV0gYnBvcyAyMS4gYWRkIFBHX0NFTlRFUg0Kc2V0Zm9udA0KfWJpbmQgZGVmDQovRlNfUEFUQkxL
DQp7L0hWNiAvSGVsdmV0aWNhIDYuIE5FV0ZPTlQNCmdzYXZlICV7ICAgJSB0byBwcmVzZXJ2ZSBj
dXJyZW50IGZvbnQgYW5kIGxpbmV3aWR0aA0KMS4gc2V0bGluZXdpZHRoDQovUEJfWSB2cG9zIGRl
Zg0KL1BCX1ggcnBvcyBQQl9XIHN1YiBkZWYNCi9PUFRfV0lEVEggKCBPUFQgT1VUOiBZRVMpIFNX
IGRlZg0KUEJfVyBQQl9IIFBCX1ggUEJfWSBCT1gNCkhWQjYgc2V0Zm9udA0KTk1fUEFUSUVOVCA5
LiBQQl9MSU5FIE1TDQpIVjYgc2V0Zm9udA0KTk1fRkFDIDguIFBCX0xJTkUgTVMNCk5NX1JFUE9S
VCA3LiBQQl9MSU5FIE1TDQovdFlQZSBleGNoIGRlZg0KdFlQZSAwIGVxIHsgNi4gUEJfTElORSBt
b3ZldG8gWyhGUk9NOiApRlJfRFRUTSggIFRPOiApVE9fRFRUTV0gU0ZBIH0gaWYNCnRZUGUgMSBl
cSB7IDYuIFBCX0xJTkUgbW92ZXRvIFsoRlJPTTogKUZSX0RUVE1dIFNGQSB9IGlmDQo1LiBQQl9M
SU5FIG1vdmV0byBbKFJPT006IClQQVRfUk9PTSggICAgQURNOiApUEFUX0FETV0gU0ZBDQo0LiBQ
Ql9MSU5FIG1vdmV0bw0KWyhBR0U6IClQQVRfQUdFKCAgICBTRVg6IClQQVRfU0VYICggICAgKURS
X1RJVExFKDogKU5NX0RPQ1RPUl0gU0ZBDQozLiBQQl9MSU5FIG1vdmV0b1soRE9COiApUEFUX0RP
QiAoICBJRDogKVBBVF9JRCggICAgTVI6IClQQVRfTVJdIFNGQQ0KKFJFUVVFU1RFRDopIDIuIFBC
X0xJTkUgTVMgUkVRVUVTVEVEIHNob3cNClJFUV9JTklUSUFMUyBsZW5ndGggMCBndCB7IFsoICBc
KCkgUkVRX0lOSVRJQUxTIChcKSkgXSBTRkEgfSBpZg0KMS4gUEJfTElORSBtb3ZldG8gWyhPUFQg
T1VUOiApT1BUX09VVF0gU0ZBDQowLiBQQl9MSU5FIGV4Y2ggMTEwLiBhZGQgZXhjaCBtb3ZldG8N
CkZTX1BBR0UgZHVwIGxlbmd0aCAwIGVxIHsgcG9wIFBBR0UgfXsgc2hvdyB9aWZlbHNlDQpncmVz
dG9yZSAlfSAlIGVuZCBGU19QQVRCTEsNCn1iaW5kIGRlZg0KL0ZTX1BBVEJMSzENCnsvSFY2IC9I
ZWx2ZXRpY2EgNi4gTkVXRk9OVA0KZ3NhdmUgJXsgICAlIHRvIHByZXNlcnZlIGN1cnJlbnQgZm9u
dCBhbmQgbGluZXdpZHRoDQoxLiBzZXRsaW5ld2lkdGgNCi9QQl9ZIHZwb3MgZGVmDQovUEJfWCBy
cG9zIFBCX1cgc3ViIGRlZg0KL09QVF9XSURUSCAoIE9QVCBPVVQ6IFlFUykgU1cgZGVmDQpQQl9X
IFBCX0ggUEJfWCBQQl9ZIEJPWA0KSFZCNiBzZXRmb250DQpOTV9QQVRJRU5UIDkuIFBCX0xJTkUg
TVMNCkhWNiBzZXRmb250DQpOTV9GQUMgOC4gUEJfTElORSBNUw0KTk1fUkVQT1JUIDcuIFBCX0xJ
TkUgTVMNCi90WVBlIGV4Y2ggZGVmDQp0WVBlIDAgZXEgeyA2LiBQQl9MSU5FIG1vdmV0byBbKEZS
T006IClGUl9EVFRNKCAgVE86IClUT19EVFRNXSBTRkEgfSBpZg0KdFlQZSAxIGVxIHsgNi4gUEJf
TElORSBtb3ZldG8gWyhGUk9NOiApRlJfRFRUTV0gU0ZBIH0gaWYNCjUuIFBCX0xJTkUgbW92ZXRv
IFsoUk9PTTogKVBBVF9ST09NKCAgICBBRE06IClQQVRfQURNXSBTRkENCjQuIFBCX0xJTkUgbW92
ZXRvDQpbKEFHRTogKVBBVF9BR0UoICAgIFNFWDogKVBBVF9TRVggKCAgICApRFJfVElUTEUoOiAp
Tk1fRE9DVE9SXSBTRkENCjMuIFBCX0xJTkUgbW92ZXRvWyhET0I6IClQQVRfRE9CICggIElEOiAp
UEFUX0lEKCAgICBNUjogKVBBVF9NUl0gU0ZBDQooUkVRVUVTVEVEOikgMi4gUEJfTElORSBNUyBS
RVFVRVNURUQgc2hvdw0KUkVRX0lOSVRJQUxTIGxlbmd0aCAwIGd0IHsgWyggIFwoKSBSRVFfSU5J
VElBTFMgKFwpKSBdIFNGQSB9IGlmDQoxLiBQQl9MSU5FIG1vdmV0byBbKE9QVCBPVVQ6IClPUFRf
T1VUXSBTRkENCjAuIFBCX0xJTkUgZXhjaCAxMTAuIGFkZCBleGNoIG1vdmV0bw0KRlNfUEFHRSBk
dXAgbGVuZ3RoIDAgZXEgDQp7cG9wIFBBR0UgL1BHTk8gUEdOTyAxIGFkZCBzdG9yZSB9IHsgc2hv
dyB9IGlmZWxzZQ0KZ3Jlc3RvcmUgJX0gJSBlbmQgRlNfUEFUQkxLMQ0KfWJpbmQgZGVmDQovRlNf
Rk9PVEVSICUgeF9wb3MgLS0NCntjdXJyZW50Zm9udCBleGNoDQpkdXAgYnBvcyAxMi4gYWRkDQpt
b3ZldG8NCkhWOSBzZXRmb250DQpbTk1fUEFUSUVOVCggICBNUjogKVBBVF9NUiggICBJRDogKVBB
VF9JRCggICBET0I6IClQQVRfRE9CKCAgLSAgKU5NX1JFUE9SVF0gU0ZBDQpicG9zIG1vdmV0byAo
Uk9PTTogKSBzaG93IFBBVF9ST09NIHNob3cNCnJwb3MgMTYwLiBzdWIgIGJwb3MgbW92ZXRvDQpG
U19QQUdFIGR1cCBsZW5ndGggMCBlcSANCntwb3AgUEFHRSAvUEdOTyBQR05PIDEgYWRkIHN0b3Jl
IH0geyBzaG93IH0gaWZlbHNlDQpzZXRmb250DQp9YmluZCBkZWYNCi9SRVBfTk9EQVRBICUgbm9u
ZQ0KezEgYmVnaW4NCkNYIENZIG1vdmV0bw0KY3VycmVudGZvbnQgSFY5IHNldGZvbnQNCmdzYXZl
DQoxLiBzZXRncmF5DQowLiAtMi4gcm1vdmV0bw0KTSBzdHJpbmd3aWR0aCAyIGNvcHkgcmxpbmV0
byAxMy4gcmxpbmV0byBuZWcgMC4gcmxpbmV0byBmaWxsDQpncmVzdG9yZQ0KTSBzaG93DQpzZXRm
b250DQplbmQNCn1ESUNUIGJpbmQgZGVmDQovUkVQX05PREFUQSBsb2FkIDAgZ2V0DQovTSAoIE5P
IERBVEEgRk9SIFRISVMgUkVQT1JUICkgcHV0DQovU1REX0hFQURFUiANCntleGNoDQovWSBleGNo
IHZwb3MgYWRkIGRlZg0KL1ggcnBvcyA4MC4gc3ViIGRlZg0KL1NURiAvTk1fU1RBRkYgd2hlcmUg
e3BvcCAxMi59ezAufWlmZWxzZSBkZWYNCmdzYXZlICV7DQpIVjEwIHNldGZvbnQNCltOTV9GQUMg
XSBZIFBHX0NFTlRFUg0KL0RFUFRfSUQgd2hlcmUNCntwb3AgWyAoREVQQVJUTUVOVDogKSBERVBU
X0lEIF0gWSAxMi4gc3ViIFBHX0NFTlRFUiB9IGlmDQpTVEYgMC4gZ3QNCntbKFNUQUZGIE5BTUU6
ICkgTk1fU1RBRkYgXSBZIDI0LiBzdWIgUEdfQ0VOVEVSIH0gaWYNCltOTV9SRVBPUlQgXSBZIDI0
LiBzdWIgU1RGIHN1YiBQR19DRU5URVINClggWSBtb3ZldG8NClBBR0VfRkxBRyAxIGVxDQp7UEFH
RSAgICAgICAgICAgIFggWSAxMi4gc3ViIG1vdmV0byBSRVFVRVNURUQgc2hvdyB9DQp7UkVRVUVT
VEVEIHNob3cgIFggWSAxMi4gc3ViIG1vdmV0byBQQUdFIH0NCmlmZWxzZQ0Key9QR05PIFBHTk8g
MSBhZGQgc3RvcmUgfSBpZg0KWyhGcm9tICkgRlJfRFRUTSAoICBUbyApIFRPX0RUVE1dIFkgMzYu
IHN1YiBTVEYgc3ViIFBHX0NFTlRFUg0KWygtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLSldIFkgNDguIHN1YiBTVEYgc3ViIFBHX0NFTlRFUg0KZ3Jlc3RvcmUgJX0NCn1iaW5k
IGRlZg0KL1NJTVBMRV9IRUFERVIgDQp7L1kgZXhjaCB2cG9zIGFkZCBkZWYNCi9YIHJwb3MgODAu
IHN1YiBkZWYNCmdzYXZlICV7DQpIVjEwIHNldGZvbnQNCltOTV9SRVBPUlQgXSBZIFBHX0NFTlRF
Ug0KMCBZIG1vdmV0bw0KUkVRVUVTVEVEIHNob3cNCmdyZXN0b3JlICV9DQp9YmluZCBkZWYNCi9T
SUdOQVRVUkUgDQp7Z3NhdmUNCi9BTk5PVF9CT0xEIC9Db3VyaWVyLUJvbGRPYmxpcXVlIDcgTkVX
Rk9OVA0KQU5OT1RfQk9MRCBzZXRmb250DQpycG9zIDIgZGl2IDMyIGFkZCAxMCBtb3ZldG8NClso
TXkgc2lnbmF0dXJlIGluZGljYXRlcyB0aGF0IHRoZSBtZWRpY2F0aW9ucyBvbiB0aGlzIHBhZ2Up
XVNGQQ0KcnBvcyAyIGRpdiAzMiBhZGQgMCBtb3ZldG8NClsod2VyZSBhZG1pbmlzdGVyZWQgYnkg
bWUuICBEYXRlOiApIFJFUVVFU1RFRF1TRkENCmdyZXN0b3JlDQpjdXJyZW50Zm9udCBIVkIxMCBz
ZXRmb250DQpicG9zIDE4LjAgYWRkIFBHX0hMDQowIGJwb3MgbW92ZXRvDQovTk1fU1RBRkYgd2hl
cmUgIHtwb3AgW05NX1NUQUZGIChfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX18pXSBTRkEgfSBpZg0Kc2V0Zm9udA0KfWRlZg0KL1NURF9GT09URVINCnsvUkVRX1NJR05B
VFVSRSB3aGVyZSB7IFNJR05BVFVSRSB9ew0KY3VycmVudGZvbnQgSFZCMTAgc2V0Zm9udA0KYnBv
cyAxOC4wIGFkZCBQR19ITA0KNDguIGJwb3MgbW92ZXRvDQp7L05NX1BBVElFTlQgd2hlcmUNCntw
b3AgW05NX1BBVElFTlQoICBET0I6IClQQVRfRE9CKCAtIClOTV9SRVBPUlRdIFNGQSBleGl0IH0g
aWYNCi9OTV9TVEFGRiB3aGVyZQ0Ke3BvcCBbTk1fU1RBRkYoIC0gKU5NX1JFUE9SVF0gU0ZBIGV4
aXQgfSBpZg0KL05NX0dFTkVSSUMgd2hlcmUNCntwb3AgW05NX0dFTkVSSUMoIC0gKU5NX1JFUE9S
VF0gU0ZBIGV4aXQgfSBpZg0KL0RFUFRfSUQgd2hlcmUNCntwb3AgW0RFUFRfSUQoIC0gKU5NX1JF
UE9SVF0gYnBvcyBQR19DRU5URVIgZXhpdCB9IGlmDQpleGl0DQp9bG9vcA0Kc2V0Zm9udA0KfWlm
ZWxzZQ0KfWJpbmQgZGVmDQovUEFHRV9GT09URVINCntjdXJyZW50Zm9udA0KYnBvcyAxOC4wIGFk
ZCBQR19ITA0KSFYxMCBzZXRmb250IFsgKFBhZ2U6ICkgUEdOTyA1IHN0cmluZyBjdnMgXSBicG9z
IDAuIGFkZCBQR19DRU5URVINCi9QR05PIFBHTk8gMSBhZGQgc3RvcmUNCnNldGZvbnQNCn1iaW5k
IGRlZg0KL1NURF9QRVJNDQp7Y3VycmVudGZvbnQgSFZCMTAgc2V0Zm9udA0KcnBvcyAoIC0gUEVS
TSkgU1cgDQpzdWIgYnBvcyBtb3ZldG8NCiggLSBQRVJNKSANCnNob3cgc2V0Zm9udA0KfWJpbmQg
ZGVmDQovU1REX1BBVElFTlQgICUgeSAtLQ0Ke2Jwb3MgYWRkICAgICAgICAgJSB5DQo0OC4wICAg
ICAgICAgICAgICUgeA0KZXhjaCBtb3ZldG8NCmN1cnJlbnRmb250IEhWOSBzZXRmb250DQpbKCAg
KVBBVF9ST09NDQooICAgTmFtZTogKU5NX1BBVElFTlQNCiggICApRFJfVElUTEUNCig6IClOTV9E
T0NUT1INCl1TRkENCjE3LjAgQ1kgMTEuIHN1YiBtb3ZldG8NClsoICBTZXg6IClQQVRfU0VYDQoo
ICAgQWdlOiApUEFUX0FHRQ0KKCAgIERvYjogKVBBVF9ET0INCiggICBBZG06IClQQVRfQURNDQoo
ICAgUGF0aWVudCBJRDogKVBBVF9JRA0KKCAgIE1lZCBSZWMgTm86IClQQVRfTVINCiggICBPcHQg
T3V0OiApT1BUX09VVA0KXVNGQQ0Kc2V0Zm9udA0KfWJpbmQgZGVmDQplbmQgJX0gRDpDTElOSVJF
UA0KL1RSSUdfRElDVA0KezggYmVnaW4gJXsNCmFsb2FkIHBvcA0KL0xGIGV4Y2ggZGVmDQpleGNo
IGZpbmRmb250IGV4Y2ggc2NhbGVmb250IC9UX0ZPTlQgZXhjaCBkZWYNCi9QRVJMSU5FIGV4Y2gg
Y3ZpIGRlZg0KL1BHV0lEVEggZXhjaCBkZWYNCkBTVl9GT05UDQovWCBjdXJyZW50cG9pbnQgL1kg
ZXhjaCBkZWYgZGVmDQovVFJJR19UQUIgWyBYDQpQRVJMSU5FIDEgZ3QNCnsxIDEgUEVSTElORSAx
IHN1Yg0Ke1BHV0lEVEggUEVSTElORSBkaXYgbXVsIFggYWRkIH0NCmZvcg0KfWlmDQpdZGVmDQp9
RElDVCBiaW5kIGRlZg0KL0RGTFRfVFJJRw0KezEgYmVnaW4NCjAgQ1kgbW92ZXRvDQovREFUQSBl
eGNoIGRlZg0KVFJJR19ESUNUICV7IGhhcyAnYmVnaW4nDQpAW1RfRk9OVCBEQVRBIFRSSUdfVEFC
IExGIEhUQUJMRV1AQA0KQFJTX0ZPTlQNCmVuZCAlfSBUUklHX0RJQ1QNCmVuZCAlfSBsb2NhbCBk
aWN0DQp9RElDVCBiaW5kIGRlZg0KL0RQTFggCSUgVVNFOiAgLWJvLSBEUExYDQp7L05VUEdFIHt9
IGRlZiAgICAgICAgICAgICAgICAgICAgICUgc2V0cyB1cCBtYXJnaW5zIA0KL05VU0hUIHt9IGRl
ZiAgICAgICAgICAgICAgICAgICAgICUgZm9yY2VzIG5ldyBzaGVldCANCi9TTVBMWCB7fSBkZWYg
ICAgICAgICAgICAgICAgICAgICAlIHJlc2V0cyB0byBzaW1wbGV4IG1vZGUgDQpzdGF0dXNkaWN0
IC9zZXRkdXBsZXhtb2RlIGtub3duDQpzdGF0dXNkaWN0IC9zZXR0dW1ibGUgICAgIGtub3duDQph
bmQNCnN0YXR1c2RpY3QgL25ld3NoZWV0ICAgICAga25vd24NCmFuZA0Kc3RhdHVzZGljdCAvZmly
c3RzaWRlICAgICBrbm93bg0KYW5kICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgJSBvcGVyYXRvcnMgYXZhaWxpYmxlID8/DQp7c3RhdHVzZGljdCAvc2V0dHVtYmxlIGdldCBl
eGVjICAgICAgICAlIGRpcmVjdGlvbiBpcyBvbiBzdGFjaw0KdHJ1ZSBzdGF0dXNkaWN0IC9zZXRk
dXBsZXhtb2RlIGdldCBleGVjICAgICAlIHNldCB0byBkdXBsZXgNCi9OVVBHRQklIFVTRTogIE5V
UEdFDQp7c3RhdHVzZGljdCAvZmlyc3RzaWRlIGdldCBleGVjIG5vdCAgJSBiYWNrIG9yIGZyb250
IG9mIHBhZ2UgPz8NCntzdGF0dXNkaWN0IC90dW1ibGUgZ2V0IGV4ZWMgICAgICAgJSB0b3Agb3Ig
c2lkZSBiaW5kaW5nID8/DQp7L3Zwb3MgdmhvbGQnIGRlZiANCi9icG9zIHZob2xkJyB2aG9sZCBz
dWIgZGVmIA0KfXsvaHBvcyBoaG9sZCcgZGVmICANCi9ycG9zIDU5NC4gaGhvbGQgIHN1YiBkZWYN
Cn1pZmVsc2UgIA0KfXsvdnBvcyB2aG9sZCBkZWYgICUganVzdCByZXNldCBpcnJlZ2FyZGxlc3MN
Ci9ocG9zIGhob2xkIGRlZg0KL2Jwb3MgMC4wIGRlZiANCi9ycG9zIDU5NC4gaGhvbGQgc3ViIGRl
Zg0KfWlmZWxzZSAgJSBmaXJzdHNpZGUNCn1iaW5kIGRlZiAgJSBOVVBHRQ0KL05VU0hUCSUgVVNF
OiAgTlVTSFQNCntzdGF0dXNkaWN0IC9uZXdzaGVldCBnZXQgZXhlYyB9IGJpbmQgZGVmIA0KL1NN
UExYIAklIFVTRTogIFNNUExYDQp7ZmFsc2Ugc3RhdHVzZGljdCAvc2V0ZHVwbGV4bW9kZSBnZXQg
ZXhlYyB9IGJpbmQgZGVmDQp9e3BvcCAgICAgICAgICAgICAgICAgICUgdW51c2VkIHR1bWJsZSBi
b29sZWFuDQp9aWZlbHNlICAgICAgICAgICAgICAgDQp9YmluZCBkZWYgICUgRFBMWA0KL0NCb29s
CQklIGNvbnZlcnQgYm9vbGVhbg0KezAgZXEge2ZhbHNlfXt0cnVlfSBpZmVsc2UgICAgJSBpbnRl
cnBlcnQgc3RhY2sgdmFsdWUNCn1iaW5kIGRlZg0KL0JBUl9DT0RFX0hFSUdIVCAyOCBkZWYNCi9E
SVNDTEFJTUVSIChcKFNVTU1BUklaRUQgUEFUSUVOVCBEQVRBIE9OTFksIENPTVBMRVRFIERBVEEg
T05MSU5FLlwpKSBkZWYNCi9TVVBFUg0KezEgYmVnaW4gDQovb2xkZm9udCBjdXJyZW50Zm9udCBk
ZWYNCi9IVjUgL0hlbHZldGljYSA1LiBORVdGT05UICANCkhWNSBzZXRmb250DQpDWCBDWSAyLiBh
ZGQgTVMNCkNYIENZIDIuIHN1YiBtb3ZldG8NCm9sZGZvbnQgc2V0Zm9udA0KZW5kDQp9RElDVCBi
aW5kIGRlZg0KL1RBQl9TVVBFUg0KezUgYmVnaW4gDQpnc2F2ZSANCi90YWJiZWRfc3RyaW5nIGV4
Y2ggZGVmDQovdGFiX3Bvc2l0aW9uIGV4Y2ggZGVmDQovc3VwZXJfc3RyaW5nIGV4Y2ggZGVmDQp0
YWJfcG9zaXRpb24gVEFCDQp0YWJiZWRfc3RyaW5nDQp0YWJiZWRfc3RyaW5nIFNXIC9zdHJpbmdf
bGVuZ3RoIGV4Y2ggZGVmDQp0YWJfcG9zaXRpb24gR0VUX1RBQl9QT1MgL3hQb3MgZXhjaCBkZWYN
CnhQb3Mgc3RyaW5nX2xlbmd0aCBhZGQgQ1kgbW92ZXRvDQpzdXBlcl9zdHJpbmcgU1VQRVIgDQpn
cmVzdG9yZQ0KZW5kDQp9RElDVCBiaW5kIGRlZg0KL0ZTX0RFTUJMSw0Key9IVjYgL0hlbHZldGlj
YSA2LiBORVdGT05UDQpnc2F2ZSAleyAgICUgdG8gcHJlc2VydmUgY3VycmVudCBmb250IGFuZCBs
aW5ld2lkdGgNCjEuIHNldGxpbmV3aWR0aA0KL1BCX1kgdnBvcyBkZWYNCi9QQl9YIHJwb3MgUEJf
VyBzdWIgZGVmDQovUEJfSCA2Ny4gZGVmICAgICAgICAlIGhlaWdodCBpbiBwb2ludHMNCi9PUFRf
V0lEVEggKCBPUFQgT1VUOiBZRVMpIFNXIGRlZg0KUEJfVyBQQl9IIFBCX1ggUEJfWSBCT1gNCkhW
QjYgc2V0Zm9udA0KTk1fUEFUSUVOVCA3LiBQQl9MSU5FIE1TDQpIVjYgc2V0Zm9udA0KTk1fRkFD
ICAgNi4gUEJfTElORSBNUw0KL3RZUGUgZXhjaCBkZWYNCnRZUGUgMCBlcSB7IDUuIFBCX0xJTkUg
bW92ZXRvIFsoRlJPTTogKUZSX0RUVE0oICBUTzogKVRPX0RUVE1dIFNGQSB9IGlmDQp0WVBlIDEg
ZXEgeyA1LiBQQl9MSU5FIG1vdmV0byBbKEZST006IClGUl9EVFRNXSBTRkEgfSBpZg0KNC4gUEJf
TElORSBtb3ZldG8gWyhST09NOiApUEFUX1JPT00oICAgIEFETTogKVBBVF9BRE1dIFNGQQ0KMy4g
UEJfTElORSBtb3ZldG8NClsoQUdFOiApUEFUX0FHRSggICAgU0VYOiApUEFUX1NFWCAoICAgIClE
Ul9USVRMRSg6IClOTV9ET0NUT1JdIFNGQQ0KMi4gUEJfTElORSBtb3ZldG9bKERPQjogKVBBVF9E
T0IgKCAgSUQ6IClQQVRfSUQoICAgIE1SOiApUEFUX01SXSBTRkENCihSRVFVRVNURUQ6KSAxLiBQ
Ql9MSU5FIE1TIFJFUVVFU1RFRCBzaG93DQpSRVFfSU5JVElBTFMgbGVuZ3RoIDAgZ3QgeyBbKCAg
XCgpIFJFUV9JTklUSUFMUyAoXCkpIF0gU0ZBIH0gaWYNCjAuIFBCX0xJTkUgbW92ZXRvIFsoT1BU
IE9VVDogKU9QVF9PVVRdIFNGQQ0KZ3Jlc3RvcmUgJX0gJSBlbmQgRlNfREVNQkxLDQp9YmluZCBk
ZWYNCi9PUFRfT1VUIHt9IGRlZg0KL1BTX1ZJVElPX0hFQURFUg0Key9ZIGV4Y2ggdnBvcyBhZGQg
MzAgYWRkIGRlZg0KL1ggMzAuIGRlZg0KZ3NhdmUNCkhWMTAgc2V0Zm9udA0KTk1fUkVQT1JUIFgg
WSBNUw0KKCAtICkgc2hvdw0KSFZCMTAgc2V0Zm9udA0KTk1fUEFUSUVOVF9DTElQUEVEIHNob3cN
CkhWMTAgc2V0Zm9udA0KL1kgWSAxMCBzdWIgZGVmDQozMC4gWSBtb3ZldG8NCihERVBUOiApIHNo
b3cNCkhWQjEwIHNldGZvbnQNCkRFUFRfSUQgc2hvdw0KSFYxMCBzZXRmb250DQooICBST09NOiAp
IHNob3cNCkhWQjEwIHNldGZvbnQNClBBVF9ST09NIHNob3cNCkhWMTAgc2V0Zm9udA0KKCAgTVI6
ICkgc2hvdw0KSFZCMTAgc2V0Zm9udA0KUEFUX01SIHNob3cNCkhWQjkgc2V0Zm9udA0KL1kgWSA5
IHN1YiBkZWYNCihGUk9NOiApIDMwIFkgTVMNCkZSX0RUVE0gc2hvdw0KKCBUTzogKSBzaG93DQpU
T19EVFRNIHNob3cNCmdyZXN0b3JlDQp9YmluZCBkZWYNCi9QUk9HUkVTU19IRUFERVINCnsvWSBl
eGNoIHZwb3MgYWRkIGRlZg0KL1ggMC4gZGVmDQpnc2F2ZSANCkhWMTAgc2V0Zm9udA0KTk1fUkVQ
T1JUIFggWSBNUw0KKCAtICkgc2hvdw0KSFZCMTAgc2V0Zm9udA0KTk1fUEFUSUVOVF9DTElQUEVE
IHNob3cNCiggLSApIHNob3cNClJFUVVFU1RFRCBzaG93DQpIVkI5IHNldGZvbnQNCi9ZIFkgOC41
IHN1YiBkZWYNCkRJU0NMQUlNRVIgMCBZIE1TDQpncmVzdG9yZQ0KfWJpbmQgZGVmDQovT1JERVJF
RF9CWSAoKSBkZWYNCi9QQUdFUl9OVU1CRVIgKCkgZGVmDQovRU5URVJFRF9BVVRIIChFbnRlcmVk
IGJ5OiApIGRlZg0KL0VOVEVSRURfT04gKCkgZGVmDQovT1JERVJfVFlQRSAoKSBkZWYNCi9TRVNT
SU9OX0lEICgpIGRlZg0KL09SREVSTk9URVNfSEVBREVSDQp7L1kgZXhjaCB2cG9zIGFkZCBkZWYN
Ci9YIDAuIGRlZg0KZ3NhdmUgDQpIVjEwIHNldGZvbnQNCk5NX1JFUE9SVCBYIFkgTVMNCiggLSAp
IHNob3cNCkhWQjEwIHNldGZvbnQNCk5NX1BBVElFTlRfQ0xJUFBFRCBzaG93DQpIVjEwIHNldGZv
bnQNCi9ZIFkgMTAgc3ViIGRlZg0KMC4gWSBtb3ZldG8gDQooREVQVDogKSBzaG93DQpIVkIxMCBz
ZXRmb250DQpERVBUX0lEIHNob3cNCkhWMTAgc2V0Zm9udA0KKCAgUk9PTTogKSBzaG93DQpIVkIx
MCBzZXRmb250DQpQQVRfUk9PTSBzaG93DQpIVjEwIHNldGZvbnQNCiggIE1SOiApIHNob3cNCkhW
QjEwIHNldGZvbnQNClBBVF9NUiBzaG93DQpIVjkgc2V0Zm9udA0KL1kgWSA5IHN1YiBkZWYNCihP
cmRlcmVkIGJ5OiApIDAgWSBNUw0KT1JERVJFRF9CWSBzaG93CQ0KKCApIHNob3cNClBBR0VSX05V
TUJFUiBzaG93DQovWSBZIDkgc3ViIGRlZg0KMCBZIG1vdmV0bw0KRU5URVJFRF9BVVRIIHNob3cN
CiggLSApIHNob3cNCkVOVEVSRURfT04gc2hvdw0KSFY5IHNldGZvbnQNCi9ZIFkgOSBzdWIgZGVm
DQooT3JkZXIgbW9kZTogKSAwIFkgTVMNCk9SREVSX1RZUEUgc2hvdw0KVFJBTlMgeyAoIC0gU3Rv
cmVkIE9yZGVyIElkOikgfQ0KeyggLSBTZXNzaW9uIElkOikgfSBpZmVsc2UNCnNob3cNClNFU1NJ
T05fSUQgc2hvdw0KZ3Jlc3RvcmUNCn1iaW5kIGRlZg0KL1dPUktOT1RFU19IRUFERVINCnsvWSBl
eGNoIHZwb3MgYWRkIGRlZg0KL1ggMC4gZGVmDQpnc2F2ZSANCkhWMTAgc2V0Zm9udA0KTk1fUkVQ
T1JUIFggWSBNUw0KKCAtICkgc2hvdw0KSFZCMTAgc2V0Zm9udA0KTk1fUEFUSUVOVF9DTElQUEVE
IHNob3cNCkhWMTAgc2V0Zm9udA0KL1kgWSAxMCBzdWIgZGVmDQowLiBZIG1vdmV0byANCihERVBU
OiApIHNob3cNCkhWQjEwIHNldGZvbnQNCkRFUFRfSUQgc2hvdw0KSFYxMCBzZXRmb250DQooICBS
T09NOiApIHNob3cNCkhWQjEwIHNldGZvbnQNClBBVF9ST09NIHNob3cNCkhWMTAgc2V0Zm9udA0K
KCAgTVI6ICkgc2hvdw0KSFZCMTAgc2V0Zm9udA0KUEFUX01SIHNob3cNCkhWQjkgc2V0Zm9udA0K
L1kgWSA5IHN1YiBkZWYNCihGUk9NOiApIDAgWSBNUw0KRlJfRFRUTSBzaG93DQooIFRPOiApIHNo
b3cNClRPX0RUVE0gc2hvdw0KZ3Jlc3RvcmUNCn1iaW5kIGRlZg0KL0xJTkVTX1RJTExfRU5ET0ZQ
QUdFDQp7MyBiZWdpbiANCi9saW5laGVpZ2h0IDE3LjQgZGVmDQoveXBvcyBDWSBkZWYNCi9uZXds
aW5lIA0Ke3lwb3MgbGluZWhlaWdodCBzdWINCi95cG9zIGV4Y2ggZGVmDQowLiB5cG9zIG1vdmV0
b30gZGVmDQowLjYwIHNldGdyYXkgMS4wMCBzZXRsaW5ld2lkdGgNCntDWSAyNyBsdCB7IGV4aXQg
fSBpZiANCm5ld2xpbmUNCjEgLTEgLTEgTElORQ0KfWxvb3ANCjAuMCBzZXRncmF5DQpTSUdOQVRV
UkUgew0KQkFSQ09ERV9JTl9CUiB7DQoveFBvcyA1LiBkZWYNCi95UG9zIENZIGRlZg0KeFBvcyBD
WSAyNCBzdWIgbW92ZXRvDQpAWyhTaWduYXR1cmU6X19fX19fX19fX19fX19fX19fX19fX19fX19f
XyBEYXRlOl9fX19fX19fX19fKV1AQCANCn1pZg0KQkFSQ09ERV9JTl9CTCB7DQoveFBvcyAyMzku
IGRlZg0KL3lQb3MgQ1kgZGVmDQp4UG9zIENZIDI0IHN1YiBtb3ZldG8NCkBbKFNpZ25hdHVyZTpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fIERhdGU6X19fX19fX19fX18pXUBAIA0KfWlmDQp4
UG9zIHlQb3MgbW92ZXRvDQowLiBsaW5laGVpZ2h0IDEwIGFkZCBuZWcgcm1vdmV0bw0KfWlmDQp9
RElDVCBiaW5kIGRlZg0KL0ZJTExfV0hJVEVfQk9YIHsgDQptb3ZldG8gMSBpbmRleCAwLiBybGlu
ZXRvIDAuIGV4Y2ggcmxpbmV0byBuZWcgMC4gcmxpbmV0bw0KY2xvc2VwYXRoIA0KMS4wIHNldGdy
YXkNCmZpbGwNCnN0cm9rZQ0KfWJpbmQgZGVmDQovQkJfWSAwIGRlZg0KL0JCX1cgMy4yNSBJTkNI
X0RFRiANCi9CQl9IIDEuMjUgSU5DSF9ERUYgICAgICAgICUgaGVpZ2h0IGluIHBvaW50cw0KL0JB
UkNPREVfSU5fQkwgZmFsc2UgZGVmDQovQkFSQ09ERV9JTl9CUiBmYWxzZSBkZWYNCi9DT1JSRUNU
X0JPVFRPTV9QQUdFDQp7QkFSQ09ERV9JTl9CTCBCQVJDT0RFX0lOX0JSIGFuZCB7ICUgaWYgd2Ug
aGF2ZSBhIGJyYWNvZGUgaW4gYm90aCBjb3JuZXJzDQpnc2F2ZSAleyAgICUgdG8gcHJlc2VydmUg
Y3VycmVudCBmb250IGFuZCBsaW5ld2lkdGgNCjEuIHNldGxpbmV3aWR0aA0KL0JCX1ggQkJfVyAx
IHN1YiBkZWYNCnJwb3MgMiBhZGQgQkJfSCBCQl9YIEJCX1kgRklMTF9XSElURV9CT1gNCjAuMCBz
ZXRncmF5DQpuZXdwYXRoDQotMSAgQkJfSCBtb3ZldG8NCnJwb3MgMiBhZGQgMCBybGluZXRvDQpz
dHJva2UNCmdyZXN0b3JlICV9IA0KfWlmIA0KfWJpbmQgZGVmDQovQkFSQ09ERV9CUl9CTEsgJSBC
QVJDT0RFIElOIEJPVFRPTSBSSUdIVCANCntnc2F2ZSAleyAgICUgdG8gcHJlc2VydmUgY3VycmVu
dCBmb250IGFuZCBsaW5ld2lkdGgNCjEuIHNldGxpbmV3aWR0aA0KL0JCX1ggcnBvcyAxIGFkZCBC
Ql9XIHN1YiBkZWYNCkJCX1cgQkJfSCBCQl9YIEJCX1kgRklMTF9XSElURV9CT1gNCjAuMCBzZXRn
cmF5DQpuZXdwYXRoDQpCQl9YIHlwb3MgMiBzdWIgbW92ZXRvDQowIEJCX0ggeXBvcyAyLjAgc3Vi
IHN1YiBybGluZXRvDQpCQl9XIDAgcmxpbmV0bw0KU0lHTkFUVVJFIHdoZXJlIHsNCkJCX1cgMzcg
YWRkIDIwIG1vdmV0byAlIHNldCBjdXJyZW50IHBvaW50DQowIDQwIHJsaW5ldG8gJSBkcmF3IGxp
bmUgZnJvbSBjdXJyZW50IHBvaW50IHRvIHJlbGF0aXZlIHBvc2l0aW9uIDAsNDANCn1pZg0Kc3Ry
b2tlDQpncmVzdG9yZSAlfSANCi9CQVJDT0RFX0lOX0JSIHRydWUgZGVmDQpDT1JSRUNUX0JPVFRP
TV9QQUdFDQp9YmluZCBkZWYgJSBlbmQgQkFSQ09ERV9CUl9CTEsNCi9CQVJDT0RFX0JMX0JMSyAl
IEJBUkNPREUgSU4gQk9UVE9NIExFRlQgDQp7Z3NhdmUgJXsgICAlIHRvIHByZXNlcnZlIGN1cnJl
bnQgZm9udCBhbmQgbGluZXdpZHRoDQoxLiBzZXRsaW5ld2lkdGgNCi9CQl9YIC0xIGRlZg0KQkJf
VyBCQl9IIEJCX1ggQkJfWSBGSUxMX1dISVRFX0JPWA0KMC4wIHNldGdyYXkNCm5ld3BhdGgNCkJC
X1cgeXBvcyAyIHN1YiBtb3ZldG8NCjAgQkJfSCB5cG9zIDIuMCBzdWIgc3ViIHJsaW5ldG8NCkJC
X1cgbmVnIDAgcmxpbmV0bw0KU0lHTkFUVVJFIHdoZXJlIHsNCkJCX1cgMjAgbW92ZXRvICAlIHNl
dCBjdXJyZW50IHBvaW50DQowIDQwIHJsaW5ldG8gJSBkcmF3IGxpbmUgZnJvbSBjdXJyZW50IHBv
aW50IHRvIHJlbGF0aXZlIHBvc2l0aW9uIDAsNDANCn1pZg0Kc3Ryb2tlDQpncmVzdG9yZSAlfSAN
Ci9CQVJDT0RFX0lOX0JMIHRydWUgZGVmDQpDT1JSRUNUX0JPVFRPTV9QQUdFDQp9YmluZCBkZWYg
JSBlbmQgQkFSQ09ERV9CTF9CTEsNCi9CQVJDT0RFX0JDX0JMSyAlIEJBUkNPREUgSU4gQk9UVE9N
IENFTlRFUiANCntnc2F2ZSAleyAgICUgdG8gcHJlc2VydmUgY3VycmVudCBmb250IGFuZCBsaW5l
d2lkdGgNCjEuIHNldGxpbmV3aWR0aA0KL0JCX1ggLTEgZGVmDQpycG9zIDIgYWRkIEJCX0ggQkJf
WCBCQl9ZIEZJTExfV0hJVEVfQk9YDQowLjAgc2V0Z3JheQ0KbmV3cGF0aA0KLTEgIEJCX0ggbW92
ZXRvDQpycG9zIDIgYWRkIDAgcmxpbmV0bw0Kc3Ryb2tlDQpncmVzdG9yZSAlfSANCn1iaW5kIGRl
ZiAlIGVuZCBCQVJDT0RFX0JDX0JMSw0KL1VOREVSX0xKICAlIFVuZGVybGluZSBhbmQgbGVmdCBq
dXN0aWZ5DQp7NCBiZWdpbg0KZ3NhdmUNCi9DOCAvQ291cmllci1Cb2xkIDguIE5FV0ZPTlQNCkM4
IHNldGZvbnQNCi9Uc3RyaW5nIGV4Y2ggZGVmICUgU2V0IG91ciB2YXJpYWJsZSBzdHJpbmcNCi9M
UE9TIDAgZGVmICUgR2V0IHJpZ2h0IHggcG9zaXRpb24NClRzdHJpbmcgbGVuZ3RoIC9jb3VudGVy
IGV4Y2ggZGVmICUgU2V0IGNvdW50ZXIgdG8gdGhlIHN0cmluZyBsZW5ndGggKGluIGNoYXJhY3Rl
cnMpDQovWFBPUyBMUE9TIGRlZiAlIFNldCB1cCBvdXIgcG9zaXRpb24gaW5jcmVtZW50IGNvdW50
ZXINCmNvdW50ZXIgeyAlIExvb3AgdGhyb3VnaCB0aGUgcmVzdCBvZiB0aGUgbGluZSANCi9YUE9T
IFhQT1MgKF8pIFNXIGFkZCBkZWYNCihfKSAxIFhQT1MgQ1kgUlMNCn1yZXBlYXQNClRzdHJpbmcg
ZHVwIFNXIExQT1MgQ1kgUlMgJSBEaXNwbGF5IHN0cmluZw0KZ3Jlc3RvcmUNCmVuZA0KfURJQ1Qg
YmluZCBkZWYNCi9VTkRFUl9SSiAgJSBVbmRlcmxpbmUgYW5kIHJpZ2h0IGp1c3RpZnkNCns0IGJl
Z2luDQpnc2F2ZQ0KL0M4IC9Db3VyaWVyLUJvbGQgOC4gTkVXRk9OVA0KQzggc2V0Zm9udA0KL1Rz
dHJpbmcgZXhjaCBkZWYgJSBTZXQgb3VyIHZhcmlhYmxlIHN0cmluZw0KVHN0cmluZyBTVyBycG9z
IGV4Y2ggMSBzdWIgc3ViIC9SUE9TIGV4Y2ggZGVmICUgR2V0IHJpZ2h0IHggcG9zaXRpb24NClRz
dHJpbmcgbGVuZ3RoIC9jb3VudGVyIGV4Y2ggZGVmICUgU2V0IGNvdW50ZXIgdG8gdGhlIHN0cmlu
ZyBsZW5ndGggKGluIGNoYXJhY3RlcnMpDQovWFBPUyBSUE9TIGRlZiAlIFNldCB1cCBvdXIgcG9z
aXRpb24gaW5jcmVtZW50IGNvdW50ZXINCmNvdW50ZXIgeyAlIExvb3AgdGhyb3VnaCB0aGUgcmVz
dCBvZiB0aGUgbGluZSANCi9YUE9TIFhQT1MgKF8pIFNXIGFkZCBkZWYNCihfKSAxIFhQT1MgQ1kg
UlMNCn1yZXBlYXQNClRzdHJpbmcgZHVwIFNXIFJQT1MgQ1kgUlMgJSBEaXNwbGF5IHN0cmluZw0K
Z3Jlc3RvcmUNCmVuZA0KfURJQ1QgYmluZCBkZWYNCi9jb21wdXRlX2JveCB7DQpuZXdwYXRoIGNs
aXBwYXRoIHBhdGhiYm94IA0KL2hlaWdodCBleGNoIDMgaW5kZXggc3ViIGRlZiANCi93aWR0aCBl
eGNoIDMgaW5kZXggc3ViIGRlZiB0cmFuc2xhdGUgDQpuZXdwYXRoIDAgMCBtb3ZldG8gbWVzc2Fn
ZSB0cnVlIGNoYXJwYXRoIHBhdGhiYm94IA0KL3kyIGV4Y2ggZGVmIA0KL3gyIGV4Y2ggZGVmIA0K
L3kxIGV4Y2ggZGVmIA0KL3gxIGV4Y2ggZGVmIA0KL3hfZGlzdCB4MiB4MSBzdWIgZGVmIA0KL3lf
ZGlzdCB5MiB5MSBzdWIgZGVmIA0KL2sgeV9kaXN0IHhfZGlzdCBkaXYgZGVmDQpoZWlnaHQgd2lk
dGggZ3Qge3dpZHRoIGhlaWdodCBkaXZ9e2hlaWdodCB3aWR0aCBkaXZ9IGlmZWxzZSBrIGx0IA0K
e2hlaWdodCB3aWR0aCBndCB7d2lkdGggMCB0cmFuc2xhdGUgOTAgcm90YXRlIC9oZWlnaHQgd2lk
dGggL3dpZHRoIGhlaWdodCBkZWYgZGVmfSBpZiANCi9zIGhlaWdodCB5X2Rpc3QgZGl2IGRlZiBz
IHMgc2NhbGUgd2lkdGggcyBkaXYgeF9kaXN0IHN1YiAyIGRpdiAwIHRyYW5zbGF0ZX0NCnsvazIg
ayBrIG11bCBkZWYgDQovYiBrIGhlaWdodCBtdWwgazIgd2lkdGggbXVsIHN1YiAxIGsyIHN1YiBk
aXYgZGVmIA0KL2Mgd2lkdGggYiBzdWIgZGVmIC9hIGsgYyBtdWwgZGVmIC9kIGhlaWdodCBhIHN1
YiBkZWYgDQovcyBjIGMgbXVsIGQgZCBtdWwgYWRkIHNxcnQgeF9kaXN0IGRpdiBkZWYgDQpiIDAg
dHJhbnNsYXRlIGQgYyBhdGFuIHJvdGF0ZSBzIHMgc2NhbGV9IGlmZWxzZSANCngxIG5lZyB5MSBu
ZWcgdHJhbnNsYXRlDQp9YmluZCBkZWYgDQovV2F0ZXJtYXJrX0dyZXlCYWNrZ3JvdW5kIA0KezEg
YmVnaW4NCmdzYXZlDQovVGltZXMtUm9tYW4gZmluZGZvbnQgMTAwIHNjYWxlZm9udCBzZXRmb250
IA0KL21lc3NhZ2UgZXhjaCBkZWYgDQpjb21wdXRlX2JveA0KMC44NSBzZXRncmF5IDAgMCBtb3Zl
dG8gbWVzc2FnZSBzaG93DQpncmVzdG9yZQ0KZW5kDQp9RElDVCBiaW5kIGRlZg0KL1dhdGVybWFy
a19PdXRsaW5lIA0KezEgYmVnaW4gIGdzYXZlDQovVGltZXMtUm9tYW4gZmluZGZvbnQgMTAwIHNj
YWxlZm9udCBzZXRmb250IA0KL21lc3NhZ2UgZXhjaCBkZWYNCmNvbXB1dGVfYm94DQozIHMgZGl2
IHNldGxpbmV3aWR0aCAxIHNldGdyYXkgDQpuZXdwYXRoIDAgMCBtb3ZldG8gbWVzc2FnZSB0cnVl
IGNoYXJwYXRoIHN0cm9rZSANCjEgcyBkaXYgc2V0bGluZXdpZHRoIDAgc2V0Z3JheSANCm5ld3Bh
dGggMCAwIG1vdmV0byBtZXNzYWdlIHRydWUgY2hhcnBhdGggc3Ryb2tlDQpncmVzdG9yZQ0KZW5k
DQp9RElDVCBiaW5kIGRlZg0KJSBhcHBlbmRfcHMoIHBzbGliL3RleHQucHMgKQ0KL0Q6UFNURVhU
IDUwIGRpY3QgZGVmDQpEOlBTVEVYVCBiZWdpbiAlew0KLzpOTTogL0Q6UFNURVhUIGRlZg0KL1RE
SUNUIHsgZHVwIDAgZ2V0IGR1cCBkdXAgMCBleGNoIDAgZ2V0IDEgYWRkIGRpY3QgcHV0DQowIGdl
dCAvOk5NOiAzIGluZGV4IHB1dA0KfWJpbmQgZGVmDQovVSAwLiBkZWYNCi9SSl9QVFMgMC4gZGVm
DQovQ05UUl9QVFMgMC4gZGVmDQovV0hUIC45NSBkZWYNCi9DVyAwLiBkZWYNCi9GSCAwLiBkZWYN
Ci9aRiAxLiBkZWYNCi9aUCB7fSBkZWYNCi9GT05UIG51bGwgZGVmDQovU1ZfRk9OVCBudWxsIGRl
Zg0KL1RBQkxPQyBbIDEgMSA4IHsgNzIuIG11bCB9IGZvciA1NiB7IDAgfSByZXBlYXQgXSBkZWYN
Ci9uYW1ldHlwZSB7IGR1cCBsZW5ndGggc3RyaW5nIGN2cw0Ke2V4Y2h9c3RvcHBlZHsxfXsge2N2
aX1zdG9wcGVke2V4Y2ggMX1pZiB9IGlmZWxzZQ0KZHVwIDAgbHQgeyAyIGNvcHkgZXhjaCBzdHJp
bmd3aWR0aCBwb3AgbXVsIDAuIHJtb3ZldG8gbmVnIH0gaWYNCntkdXAgc2hvdyB9IHJlcGVhdCBw
b3ANCn1iaW5kIGRlZg0KL2RpY3R0eXBlIHsgWlAgICAgICAlIHJ1biB6b29tIHByb2MNCi9GSCAx
IGluZGV4IC9Gb250TWF0cml4IGdldCAzIGdldCAxMDAwLiBtdWwgc3RvcmUNCnNldGZvbnQNCi9D
VyAoICkgc3RyaW5nd2lkdGggcG9wIHN0b3JlDQp9YmluZCBkZWYNCi9hcnJheXR5cGUgL2V4ZWMg
bG9hZCBkZWYNCi9vcGVyYXRvcnR5cGUgL2V4ZWMgbG9hZCBkZWYNCi9udWxsdHlwZSAvcG9wIGxv
YWQgZGVmDQovc3RyaW5ndHlwZQ0Ke0NOVFJfUFRTIDAuIG5lDQp7ZHVwIHN0cmluZ3dpZHRoIHBv
cCBDTlRSX1BUUyBzdWIgLS41IG11bCAwLiBybW92ZXRvDQovQ05UUl9QVFMgMC4gc3RvcmUNCn17
UkpfUFRTIDAuIG5lDQp7UkpfUFRTIDEgaW5kZXggc3RyaW5nd2lkdGggcG9wIHN1YiAwLiBybW92
ZXRvDQovUkpfUFRTIDAuIHN0b3JlDQp9aWYNCn1pZmVsc2UNCldIVCAwLiBsdA0Ke2dzYXZlDQow
LgkJCQklIGZvciBhIGxhdGVyIHJtb3ZldG8NCkZIICAgICAgICAJCSUgZm9udGhlaWdodCBpcyBo
ZWlnaHQgb2YgZ3JheSBhcmVhDQpkdXAgc2V0bGluZXdpZHRoICAlIHdpbGwgc3Ryb2tlIGEgbGlu
ZSBGSCB3aWRlDQouMzIgbXVsIHJtb3ZldG8JJSBtdWwgYnkgRkggdG8gbW92ZSBncmF5IGFyZWEg
YmVsb3cgdGV4dCBhcmVhDQpXSFQgbmVnIHNldGdyYXkNCmR1cCBzdHJpbmd3aWR0aCBybGluZXRv
IHN0cm9rZQklIHRoZSBncmF5IGxpbmUNCmdyZXN0b3JlDQp9aWYNClUgMC4gZXENCntzaG93IH0J
CQklIG5vIHVuZGVybGluaW5nDQp7Y3VycmVudHBvaW50IDIgaW5kZXggc2hvdw0KZ3NhdmUNCi41
IHNldGxpbmV3aWR0aA0KMC4gVSBybW92ZXRvDQpVIGFkZCBsaW5ldG8gc3Ryb2tlDQpncmVzdG9y
ZSBwb3ANCn1pZmVsc2UNCn1iaW5kIGRlZg0KL2ludGVnZXJ0eXBlIHt9IGRlZg0KL3JlYWx0eXBl
IHt9IGRlZg0KL0BAIHsgeyBkdXAgdHlwZSBleGVjIH0gZm9yYWxsIGVuZCB9IGJpbmQgZGVmDQov
QFNIIHsgc3RyaW5ndHlwZSBlbmQgfSBkZWYNCi9TRVRUQUIge3sgY3ZpIFRBQkxPQyBleGNoIGN1
cnJlbnRwb2ludCBwb3AgcHV0IH19IGJpbmQgZGVmDQovU0VUX0FMTF9UQUJTDQp7ezEgYmVnaW4N
CmN2aSBhcnJheSBhc3RvcmUNCmR1cCBsZW5ndGgNCi9OIGV4Y2ggZGVmDQpOIDEgc3ViIC0xIDAN
CnsyIGNvcHkgMiBjb3B5IGdldCBaRiBtdWwgcHV0IHBvcCB9DQpmb3INClRBQkxPQyBleGNoIDAg
ZXhjaCBwdXRpbnRlcnZhbA0KVEFCTE9DIE4gWyBUQUJMT0MgbGVuZ3RoIE4gc3ViIHswLn0gcmVw
ZWF0IF0gcHV0aW50ZXJ2YWwNCmVuZA0KfX1URElDVCBiaW5kIGRlZg0KL1NFVF9UQUJfT0ZGICAl
IFNldCBUYWIgT2Zmc2V0DQp7e1s0IDEgcm9sbCAgICAgICAgICAgICAgICUgc2V0IGEgbWFyayBh
bmQgcm9sbCBpdCBwYXN0IC1mb3ItIGxvb3AgcGFyYW1zDQpleGNoIC4wMSBzdWIgZXhjaCAgICAg
ICAgJSBkZWNyZWFzZSBpbnRlcnZhbCBzbyBsYXN0IHN0b3AgPCAtZm9yLSBsb29wIGVuZA0Ke31m
b3IgICAgICAgICAgICAgICAgICAlIHBsYWNlIHRhYiBsb2NhdGlvbnMgb24gc3RhY2sNCmNvdW50
dG9tYXJrICAgICAgICAgICAgICAlIGNvdW50IHRvIG1hcmsNClNFVF9BTExfVEFCUyAgZXhlYyAg
ICAgICAlIG5vdyBzZXQgdGhlIHN0b3BzIChpbnRvIFRBQkxPQykNCnBvcCAgICAgICAgICAgICAg
ICAgICAgICAlIHBvcCBtYXJrIG9mZg0KfX1iaW5kIGRlZg0KL0NMRUFSX1RBQlMNCnt7L1RBQkxP
QyBbIFRBQkxPQyBsZW5ndGggezAufSByZXBlYXQgXSBzdG9yZQ0KfX1iaW5kIGRlZg0KL1RBQiB7
eyBjdmkgVEFCTE9DIGV4Y2gge2dldH1zdG9wcGVkezEgaW5kZXggbGVuZ3RoIG1vZCBnZXR9aWYN
CmN1cnJlbnRwb2ludCBleGNoIHBvcCBtb3ZldG8gfX0gYmluZCBkZWYNCi9HRVRfVEFCX1BPUyB7
eyBjdmkgVEFCTE9DIGV4Y2gge2dldH1zdG9wcGVkezEgaW5kZXggbGVuZ3RoIG1vZCBnZXR9aWYN
Cn19YmluZCBkZWYNCi9UQUJfQ1MNCnt7MiBiZWdpbg0KL0lOUCBleGNoIGRlZg0KL1ggMCBkZWYN
CntJTlAgWCB7Z2V0fXN0b3BwZWR7cG9wIHBvcCBleGl0fWlmIHR5cGUNCi9zdHJpbmd0eXBlIGVx
IHsgSU5QIFggMiBnZXRpbnRlcnZhbCBhbG9hZCBwb3ANClRBQkxPQyBleGNoIGN2aSAyIGdldGlu
dGVydmFsDQphbG9hZCAwIGdldCBDWSBtb3ZldG8NCnN1YiBuZWcgL0NOVFJfUFRTIGV4Y2ggc3Rv
cmUNCnN0cmluZ3R5cGUNCi9YIDIgQUREDQp9e0lOUCBYIGdldCBkdXAgdHlwZSBleGVjDQovWCAr
Kw0KfWlmZWxzZQ0KfWxvb3ANCmVuZA0KfX1URElDVCBiaW5kIGRlZg0KL1RBQl9DU19GSVQNCnt7
MyBiZWdpbg0KL0lOUCBleGNoIGRlZg0KL1ggMCBkZWYNCntJTlAgWCB7Z2V0fXN0b3BwZWR7cG9w
IHBvcCBleGl0fWlmIHR5cGUNCi9zdHJpbmd0eXBlIGVxIHsgSU5QIFggMiBnZXRpbnRlcnZhbCBh
bG9hZCBwb3ANClRBQkxPQyBleGNoIGN2aSBkdXAgMyAxIHJvbGwgMiBnZXRpbnRlcnZhbA0KYWxv
YWQgMCBnZXQgQ1kgbW92ZXRvDQpzdWIgbmVnIGV4Y2ggVEFCTE9DIGV4Y2ggZ2V0IENZIFNIUklO
S19UT19GSVQNCi9YIDIgQUREDQp9e0lOUCBYIGdldCBkdXAgdHlwZSBleGVjDQovWCArKw0KfWlm
ZWxzZQ0KfWxvb3ANCmVuZA0KfX1URElDVCBiaW5kIGRlZg0KL1RBQl9SSg0Ke3syIGJlZ2luDQov
SU5QIGV4Y2ggZGVmDQovWCAwIGRlZg0Ke0lOUCBYIHtnZXR9c3RvcHBlZHtwb3AgcG9wIGV4aXR9
aWYgdHlwZQ0KL2RpY3R0eXBlIGVxIHsgSU5QIFggZ2V0IGRpY3R0eXBlICVmb250DQovWCArKw0K
fXtJTlAgWCAyIGdldGludGVydmFsIGFsb2FkIHBvcA0KVEFCTE9DIGV4Y2ggY3ZpIDIgZ2V0aW50
ZXJ2YWwNCmFsb2FkIDAgZ2V0IENZIG1vdmV0bw0Kc3ViIG5lZyAvUkpfUFRTIGV4Y2ggc3RvcmUN
CnN0cmluZ3R5cGUNCi9YIDIgQUREDQp9aWZlbHNlDQp9bG9vcA0KZW5kDQp9fVRESUNUIGJpbmQg
ZGVmDQovVEFCX0NBDQp7e2Fsb2FkIGxlbmd0aCAtMiAxDQp7cG9wIFRBQkxPQyBleGNoIGN2aSBn
ZXQgQ1kgbW92ZXRvDQpkdXAgc3RyaW5nd2lkdGggcG9wIC0uNSBtdWwgMCBybW92ZXRvIHN0cmlu
Z3R5cGUNCn1mb3INCn19YmluZCBkZWYNCi9OX1RBQiB7eyAoTikgc3RyaW5nd2lkdGggcG9wIG11
bCAwLiBybW92ZXRvIH19IGJpbmQgZGVmDQovSEwNCnt7Y3VycmVudHBvaW50DQoyIGluZGV4IFpG
IG11bCAwLiBybGluZXRvIHN0cm9rZQ0KbW92ZXRvIHBvcA0KfX1iaW5kIGRlZg0KL1VMIHt7IC9V
IHtleGNoIFpGIG11bH1zdG9wcGVke0ZIIC4yIG11bH1pZiBuZWcgc3RvcmUgfX0gYmluZCBkZWYN
Ci9SSiB7eyBDVyBtdWwgL1JKX1BUUyBleGNoIHN0b3JlIH19IGJpbmQgZGVmDQovQ0VOVEVSIHt7
IENXIG11bCAvQ05UUl9QVFMgZXhjaCBzdG9yZSB9fSBiaW5kIGRlZg0KL1NQIHt7IENXIHttdWx9
c3RvcHBlZCBwb3AgMC4gcm1vdmV0byB9fSBiaW5kIGRlZg0KL0dSQVkge3sgL1dIVCB7ZXhjaH1z
dG9wcGVke1dIVCBuZWd9aWYgc3RvcmUgfX0gYmluZCBkZWYNCi9TSEFERSB7eyBnc2F2ZSAwLiBG
SCBkdXAgc2V0bGluZXdpZHRoIC4zMiBtdWwgcm1vdmV0bw0KV0hUIGFicyBzZXRncmF5DQpDVyBt
dWwgMC4gcmxpbmV0byBzdHJva2UNCmdyZXN0b3JlDQp9fWJpbmQgZGVmDQovWk9PTSB7eyAvWkYg
MSBpbmRleCBzdG9yZQ0KMS4gZXEgIHsgL1pQIHt9IHN0b3JlIH0NCnsvWlAge1pGIHNjYWxlZm9u
dH0gc3RvcmUgfQ0KaWZlbHNlDQp9fWJpbmQgZGVmDQovRDpCT1ggNCBkaWN0IGRlZg0KL1NUQVJU
Qk9YIHt7IEQ6Qk9YIGJlZ2luDQovT1ggY3VycmVudHBvaW50IC9PWSBleGNoIGRlZiBkZWYNCi9P
WSBleGNoIFpGIG11bCBPWSBhZGQgZGVmDQovT1ggZXhjaCBaRiBtdWwgT1ggYWRkIGRlZg0KZW5k
DQp9fWJpbmQgZGVmDQovRU5EQk9YIHt7IEQ6Qk9YIGJlZ2luDQovQ1ggY3VycmVudHBvaW50IC9D
WSBleGNoIGRlZiBkZWYNCi9DWSBleGNoIFpGIG11bCBDWSBhZGQgZGVmDQovQ1ggZXhjaCBaRiBt
dWwgQ1ggYWRkIGRlZg0KY3VycmVudHBvaW50DQpDWCBDWSBtb3ZldG8NCk9YIENZIGxpbmV0bw0K
T1ggT1kgbGluZXRvDQpDWCBPWSBsaW5ldG8NCmVuZA0KY2xvc2VwYXRoIHN0cm9rZQ0KbW92ZXRv
DQp9fWJpbmQgZGVmDQovRU5EQk9YRklMTCB7eyBEOkJPWCBiZWdpbg0KL0NYIGN1cnJlbnRwb2lu
dCAvQ1kgZXhjaCBkZWYgZGVmDQovQ1kgZXhjaCBaRiBtdWwgQ1kgYWRkIGRlZg0KL0NYIGV4Y2gg
WkYgbXVsIENYIGFkZCBkZWYNCmN1cnJlbnRwb2ludA0KQ1ggQ1kgbW92ZXRvDQpPWCBDWSBsaW5l
dG8NCk9YIE9ZIGxpbmV0bw0KQ1ggT1kgbGluZXRvDQplbmQNCmNsb3NlcGF0aCANCmdzYXZlDQoz
IC0xIHJvbGwNCnNldGdyYXkNCmZpbGwNCmdyZXN0b3JlDQpzdHJva2UNCm1vdmV0bw0KfX1iaW5k
IGRlZg0KL0FSUl9WQg0Ke3sxIGJlZ2luDQovSFQgZXhjaCBaRiBtdWwgZGVmDQpjdXJyZW50cG9p
bnQNCmdzYXZlIHRyYW5zbGF0ZQ0Ke1pGIG11bCAwLiBtb3ZldG8gMC4gSFQgcmxpbmV0byB9IGZv
cmFsbCBzdHJva2UNCmdyZXN0b3JlDQplbmQNCn19VERJQ1QgYmluZCBkZWYNCi9UQUJfVkINCnt7
MSBiZWdpbg0KL0hUIGV4Y2ggWkYgbXVsIGRlZg0KZ3NhdmUgMC4gQ1kgdHJhbnNsYXRlDQpUQUJM
T0MgDQp7ZHVwIDAuMCBndCANCnswLiBtb3ZldG8gMC4gSFQgcmxpbmV0byB9IHsgcG9wIH0gaWZl
bHNlIA0KfWZvcmFsbCBzdHJva2UNCmdyZXN0b3JlDQplbmQNCn19VERJQ1QgYmluZCBkZWYNCi9I
VEFCTEUNCnt7NSBiZWdpbg0KZHVwIHR5cGUgL2FycmF5dHlwZSBlcSB7L0RJU1AgZXhjaH17L0RJ
U1AgL3Nob3cgbG9hZH1pZmVsc2UgZGVmDQovTEYgZXhjaCBkZWYNCi9UQUJTIGV4Y2ggZGVmDQov
SSAwIGRlZg0KL1kgY3VycmVudHBvaW50IGV4Y2ggcG9wIExGIHN1YiBkZWYNCntUQUJTIEkge2dl
dH1zdG9wcGVkDQp7L1kgWSBMRiBzdWIgZGVmDQovSSAwIGRlZg0KcG9wIDAgZ2V0DQp9aWYNClkg
bW92ZXRvIERJU1ANCi9JICsrDQp9Zm9yYWxsDQpUQUJTIDAgZ2V0IGN1cnJlbnRwb2ludCBleGNo
IHBvcCBtb3ZldG8NCmVuZA0KfX1URElDVCBiaW5kIGRlZg0KL1ZUQUJMRQ0Ke3s5IGJlZ2luDQpk
dXAgdHlwZSAvYXJyYXl0eXBlIGVxIHsvRElTUCBleGNofXsvRElTUCAvc2hvdyBsb2FkfWlmZWxz
ZSBkZWYNCi9MRiBleGNoIGRlZg0KL1RBQlMgZXhjaCBkZWYNCi9YIFRBQlMgMCBnZXQgZGVmDQov
WSBjdXJyZW50cG9pbnQgZXhjaCBwb3AgTEYgc3ViIGRlZg0KL09ZIFkgZGVmDQovQyBUQUJTIGxl
bmd0aCBkZWYgJSBudW0gY29sdW1ucw0KL1JPV1MgMSBpbmRleCBsZW5ndGggQyBhZGQgMSBzdWIg
QyBpZGl2IGRlZg0KL1IgMCBkZWYNCi9DIDAgZGVmDQp7UiBST1dTIGVxIHsgL0MgKysgL1ggVEFC
UyBDIGdldCBkZWYgL1IgMCBkZWYgL1kgT1kgZGVmIH1pZg0KWCBZIG1vdmV0byBESVNQDQovWSBZ
IExGIHN1YiBkZWYNCi9SICsrDQp9Zm9yYWxsDQpUQUJTIDAgZ2V0IE9ZIExGIDEgc3ViIFJPV1Mg
bXVsIHN1YiBtb3ZldG8NCmVuZA0KfX1URElDVCBiaW5kIGRlZg0KZW5kICV9IEQ6UFNURVhUDQov
QCB7IEQ6UFNURVhUIGJlZ2luIH0gYmluZCBkZWYgJSB0dXJuIG9uIGludGVycHJldGVyDQovQENS
IHsgY3VycmVudHBvaW50IGV4Y2ggcG9wIGFkZCBtb3ZldG8gfSBiaW5kIGRlZg0KL0BOT19GT05U
IHsgRDpQU1RFWFQgYmVnaW4gL0ZIIDAuIGRlZiBlbmQgfSBiaW5kIGRlZg0KL0BTVl9GT05UIHsg
RDpQU1RFWFQgYmVnaW4NCi9TVl9GT05UIEZIIDAgZ3QgeyBjdXJyZW50Zm9udCB9eyBudWxsIH0g
aWZlbHNlIGRlZg0KZW5kIH0gYmluZCBkZWYNCi9AUlNfRk9OVCB7IEQ6UFNURVhUIGJlZ2luDQpT
Vl9GT05UIGR1cCBudWxsIGVxDQp7cG9wfQ0Key9GSCAxIGluZGV4IC9Gb250TWF0cml4IGdldCAz
IGdldCAxMDAwLiBtdWwgc3RvcmUNCnNldGZvbnQNCi9DVyAoICkgc3RyaW5nd2lkdGggcG9wIHN0
b3JlDQp9aWZlbHNlDQplbmQgfSBiaW5kIGRlZg0KJSBhcHBlbmRfcHMoIHBzbGliL3ByaW50SUYu
cHMgKQ0KL0hEUjEgICAgICAgICAgICAgJSBIZWFkZXIgMSANCns0IGJlZ2luIA0KL1kgZXhjaCAg
ZGVmICAgICAgICAgICAgICAgICAgICAgICAgICAgICAlIHN0b3JlIFkgc2l6ZQ0KL1hMIDAuMCBk
ZWYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAlIG5vIHRhYiBsZWZ0DQovWFIgcnBvcyBk
ZWYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICUgbm8gdGFiIHJpZ2h0DQovWkYgRDpQU1RF
WFQgL1pGIGdldCBkZWYgICAgICAgICAgICAgICAgICUgZ2V0IHpvb20gZmFjdG9yDQpnc2F2ZSAN
CmV4Y2ggY3ZpIGR1cCAtMSBuZSAgICAgICAgICAgICAgICAgICAgICAgJSBsZWZ0IHBvc2l0aW9u
IHRhYiA/Pw0Key9YTCBleGNoIEQ6UFNURVhUIC9UQUJMT0MgZ2V0ICBleGNoIGdldCBaRiBkaXYg
ZGVmIH0NCntwb3AgfSBpZmVsc2UNCmN2aSBkdXAgLTEgbmUgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgJSByaWdodCBwb3NpdGlvbiB0YWIgPz8NCnsvWFIgZXhjaCBEOlBTVEVYVCAvVEFCTE9D
IGdldCAgZXhjaCBnZXQgWkYgZGl2IGRlZiB9DQp7cG9wIH0gaWZlbHNlICAgICAgIA0KQFsgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAlIGJveCBpdA0KWEwgWSBTVEFSVEJP
WCAgICAgICAgICAgICAgICAgICAgICAgICAgICAlIHN0YXJ0ICh1cHBlciBsZWZ0KQ0KWFIgY3Vy
cmVudGxpbmV3aWR0aCBFTkRCT1hGSUxMICAgICAgICAgICAlIGVuZCAobG93ZXIgcmlnaHQpDQpd
QEANCkBbZXhjaCAvRk9OVCBleGNoIFkgMiBkaXYgTkVXRk9OVCBGT05UXUBAICAgICUgc2V0IHRp
dGxlIGZvbnQNClhMIFpGIG11bCBjdXJyZW50bGluZXdpZHRoIGFkZCAgICAgICAgICAgICAgICUg
WA0KWSAwLjMwIG11bCAgWkYgbXVsICBDWSBhZGQgICAgICAgICAgICAgICAgICAgJSBZDQptb3Zl
dG8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAlIG1vdmV0byB0ZXh0IHBv
c2l0aW9uDQpjdmkgZHVwIDAgbHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICUganVzdGlm
aWNhdGlvbg0Ke3BvcCBjdXJyZW50bGluZXdpZHRoIDAuMCBybW92ZXRvIHNob3cgDQp9e0BbIA0K
MyAxIHJvbGwNClhSIFhMIHN1YiAgY3VycmVudGxpbmV3aWR0aCAyIG11bCBzdWIgIENXIGRpdiBa
RiBtdWwgICAgJSBjb21wdXRlIHNwYWNlcw0KZXhjaCAwIGVxDQp7Q0VOVEVSIA0KfXtSSiAgICAg
ICAgICUgcmlnaHQNCn1pZmVsc2UNCjMgLTEgcm9sbA0KXUBADQp9aWZlbHNlDQpncmVzdG9yZSBl
bmQNCn1ESUNUIGJpbmQgZGVmDQovTElORQkJCQklIExpbmUNCnszIGJlZ2luDQpkdXAgLTEuMCBn
dCAgICAlIHN0YXJ0aW5nIHgNCntAW1RBQl1AQCB9eyBwb3AgfSBpZmVsc2UgICAgICAgJSBtb3Zl
dG8gc3RhcnRpbmcgdGFiDQovU1ggQ1ggZGVmDQovWSBDWSBkZWYgICAgICAlIHNhdmUgc3RhcnRp
bmcgcG9pbnQNCmR1cCAtMS4wIGd0ICAgICUgZ290byBlbmRpbmcgWA0Ke0BbVEFCXUBAIA0KfXtw
b3AgcnBvcyBDWSBtb3ZldG8gDQp9aWZlbHNlDQovRVggQ1ggZGVmICAgICAlIHNhdmUgZW5kaW5n
IFgNCmdzYXZlDQoxIDEgMyAtMSByb2xsICAlIHN0YXJ0IGZvciBsb29wDQp7cG9wIA0KU1ggWSBs
aW5ldG8NCi9ZIFkgY3VycmVudGxpbmV3aWR0aCAxLjAgYWRkIGFkZCBkZWYNCkVYIFkgbW92ZXRv
DQp9Zm9yDQpzdHJva2UNCmdyZXN0b3JlDQplbmQNCn1ESUNUIGJpbmQgZGVmDQovQk9YVFJJRyAg
ICAgICAgICAgICUgQm94IHRyaWdnZXINCntwb3AgICAgICAgICAgICAgICAgICAgICAgICUgaXMg
ZW1wdHkgZGF0YSBhcnJheQ0KYWxvYWQgICAgICAgICAgICAgICAgICAgICAlIGxvYWQgcGFyYW1l
dGVyIGFycmF5IG9udG8gc3RhY2sNCnBvcCAgICAgICAgICAgICAgICAgICAgICAgJSBwb3AgcGFy
YW1ldGVyIGFycmF5IG9mZiBvZiBzdGFjaw0KMC4wIGV4Y2ggbmVnIHJtb3ZldG8gICAgICAlIFkg
cG9zaXRpb24gdG8gbW92ZXRvDQpjbGVhciAgICAgICAgICAgICAgICAgICAgICUgY2xlYXIgc3Rh
Y2sNCjAgRU5EQk9YKyAgICAgICAgICAgICAgICAgICAlIGJveCBkYXRhDQp9YmluZCBkZWYNCi9F
TkRCT1grICAgICAgICAgICAgJSBFbmQgYm94LCBkaXNwbGF5IGxpbmVzDQp7MyBiZWdpbiAgICUg
VEFCTk8gVkJPT0wgSEJPT0wgDQpAWyAgICAgICAgICAgICAgICAgICAgICAgJSBvcGVuIHVwIHRl
eHQgZGljdGlvbmFyeQ0KVEFCTk8gLTEuMCBlcSAgICAgICAgICAgICUgdGFiIG9yIHJpZ2h0IHBh
Z2Ugc2lkZSA/Pw0Ke3Jwb3MgQ1kgbW92ZXRvIA0KfXtUQUJOTyBUQUIgDQp9aWZlbHNlDQpdQEAN
CjEgZXEJCQkJCSUgc2hpZnQgb3ZlciBSSFMgbGluZSBvZiBib3gNCnstNSAwIHJtb3ZldG8NCn1p
Zg0KQFsNCjAuMCAwLjAgRU5EQk9YICAgICAgICAgICAlIGRvIGJveGluZw0KVkJPT0wgdHJ1ZSBl
cSAgICAgICAgICAgICUgcHV0IG91dCB2ZXJ0aWNhbCBsaW5lcyBhdCB0YWJzPz8NCntZQk9YUyBD
WSBzdWIgWkYgZGl2IFRBQl9WQg0KfWlmDQpdQEAgICAgICAgICAgICAgICAgICAgICAgJSBjbG9z
ZSB0ZXh0IGRpY3Rpb25hcnkNCkhCT09MIHRydWUgZXEgICAgICAgICAgICAlIHB1dCBvdXQgaG9y
aXpvbnRhbCBsaW5lcyBhdCBsaW5lZmVlZHM/Pw0Ke3BvcCAgICAgICAgICAgICAgICAgICAgJSBv
ZmYgbGFzdCBsaW5lDQovU1ggRDpQU1RFWFQgL0Q6Qk9YIGdldCAvT1ggZ2V0IGRlZiAgICAgJSBn
ZXQgc3RhcnRpbmcgWCBwb3NpdGlvbg0KL0VYIENYIGRlZiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICUgc2F2ZSBjdXJyZW50IFggcG9zaXRpb24NCmdzYXZlDQozIDEgY291bnQgICAgICAg
ICAgICAgICUgd2hpbGUgWSBwb3NpdGlvbnMgb24gc3RhY2sNCntwb3AgICAgICAgICAgICAgICAg
ICAlIG9mZiBsb29wICMNCkVYIGV4Y2ggMiBzdWIgbW92ZXRvICUgdXAgb25lIGxpbmUNClNYIENZ
IGxpbmV0byAgICAgICAgICUgcHV0IG91dCBsaW5lIA0KfWZvcg0Kc3Ryb2tlDQpncmVzdG9yZQ0K
fXtjbGVhciAgICAgICAgICAgICAgICAgICUgc3RhY2sNCn1pZmVsc2UNCjAuMCBDWSBtb3ZldG8g
ICAgICAgICAgICAlIG1vdmV0byB0byBsZWZ0IHNpZGUgb2YgcGFnZQ0KZW5kDQp9RElDVCBiaW5k
IGRlZg0KL0VOREJPWCsgbG9hZCAwIGdldCAgICAgICAgICAgJSBvcGVuIGRpY3Rpb25hcnkNCmJl
Z2luDQovVEFCTk8gLTEgZGVmDQovVkJPT0wgZmFsc2UgZGVmDQovSEJPT0wgZmFsc2UgZGVmDQpl
bmQgICAgICAgICAgICAgICAgICAgICAgICAgICAlIGNsb3NlIGRpY3Rpb25hcnkNCi9TU1FaDQp7
MiBiZWdpbg0KMiBjb3B5IGV4Y2ggU1cgZ2UNCntwb3AgfQ0Key9TQSBleGNoIC44NzUgZGl2IGRl
ZiAlIGFkanVzdGVkIFNwYWNlIEF2YWlsYWJsZQ0KL1N0ciBleGNoIGRlZg0KbWF0cml4IGN1cnJl
bnRtYXRyaXgNCi44NzUgMS4gc2NhbGUgICAgICAgJSBhZGp1c3QgZm9udHdpZHRoDQp7U0EgU3Ry
IFNXIGdlIHsgU3RyIGV4Y2ggZXhpdCB9IGlmICUgaXQgZml0cw0KL1N0ciBTdHIgMCAxIGluZGV4
IGxlbmd0aCAxIHN1YiBnZXRpbnRlcnZhbCBkZWYgJSBkcm9wIGEgbGV0dGVyDQp9bG9vcA0Kc2V0
bWF0cml4DQp9aWZlbHNlDQplbmQNCn1ESUNUIGJpbmQgZGVmDQovSlVTVA0KezIgYmVnaW4gICAg
ICUgUlBOVCBMUE5UICANCi9SUE5UIHJwb3MgZGVmICAgICAgICAgICAgICAgICAgICUgZmFydGhl
c3QgcmlnaHQgcG9zaXRpb24gdG8gc3RhcnQNCi9MUE5UIGV4Y2ggVEFCTE9DIGV4Y2ggZ2V0IGRl
ZiAgICUgZ2V0IFggcG9zaXRpb24gb2YgdGFiIA0KVEFCTE9DIA0Ke2R1cCBMUE5UIGd0ICAgICAg
ICAgICAgICAgICAgICAlIHBvaW50IGdyZWF0ZXIgdGhhbiBjdXJyZW50IFggPz8NCmV4Y2ggZHVw
IA0KUlBOVCBsdCAgICAgICAgICAgICAgICAgICAgICAgICUgcG9pbnQgbGVzcyB0aGFuIGxhc3Qg
YmlnZ2VzdAk/Pw0KZXhjaCAzIDEgcm9sbCBhbmQgICAgICAgICAgICAgICUgaWYgc28gLSBzdG9y
ZSBhcyBuZXh0IGdyZWF0ZXIgcG9zaXRpb24NCnsvUlBOVCBleGNoIGRlZiB9IHsgcG9wIH0gaWZl
bHNlIA0KfWZvcmFsbA0KUlBOVCBMUE5UIHN1YiBDVyBkaXYgICAgICAgICAgICAgICAgJSBjb21w
dXRlIGp1c3RpZmljYXRpb24gZGlzdGFuY2UgKHNwYWNlcykNCmV4Y2ggMCBlcSB7IENFTlRFUiB9
IHsgUkogfSBpZmVsc2UgICUgcHV0IGp1c3RpZmljYXRpb24gb3BlcmF0b3INCmVuZA0KfURJQ1Qg
YmluZCBkZWYNCi9TSUdUUklHICAgICAgICAgICAgJSBzaWduYXR1cmUgdHJpZ2dlcg0Ke0BbIENM
RUFSX1RBQlMgXUBADQpjdXJyZW50cG9pbnQgL2N1clkgZXhjaCBkZWYgcG9wICAwLjAgY3VyWSBt
b3ZldG8NCkBbDQo2MCBTUCAwIFNFVFRBQg0KMTUgU1AgMSBTRVRUQUINCl1AQA0KMC4wIGN1clkg
bW92ZXRvDQowLiAtMTAuOCBAQ1INCjAuIC0yLiBAQ1INCjEgLTEgMCBMSU5FDQowLiAtMTAuOCBA
Q1INCkBbDQoxIFRBQg0KKFNpZ25hdHVyZSwgVGl0bGUsIERhdGUsIGFuZCBUaW1lKQ0KXUBADQpA
W0NMRUFSX1RBQlNdQEANCjAuIC0xMi4gQENSDQpAWw0KKCoqIFRoZSBwcmVjZWVkaW5nIG9yZGVy
cyB3aWxsIGV4cGlyZSBvbiB0aGUgZGF0ZSBhbmQgdGltZSBsaXN0ZWQuKQ0KXUBADQowLiAtMTAu
OCBAQ1INCkBbDQooUGxlYXNlIGluZGljYXRlIEFzIGlzLCBSZW9yZGVyLCBFZGl0IG9yIEQvQyBc
KGRpc2NvbnRpbnVlIGltbWVkaWF0ZWx5XCkgZm9yIGVhY2ggb3JkZXIgaXRlbSBsaXN0ZWQuICoq
KQ0KXUBADQp9YmluZCBkZWYNCi9TSEFERV9USElTX0xJTkUNCnsyIGJlZ2luDQpnc2F2ZQ0Kc2V0
Z3JheQ0KZHVwIHNldGxpbmV3aWR0aA0KMCBleGNoDQouMzIgbXVsIHJtb3ZldG8JCSUgbW92ZSB0
byBqdXN0IGJlbG93IHRoZSBjZW50ZXIgb2YgdGhlIGZvbnQgc28NCnJwb3MgMCBybGluZXRvCQkl
IGRyYXcgbGluZSB0byByaWdodC1oYW5kLW1hcmdpbg0Kc3Ryb2tlDQpncmVzdG9yZQ0KZW5kDQp9
RElDVCBiaW5kIGRlZg0KL1NJR19CTE9DSzEgew0KMCA0MyBtb3ZldG8NCkBbMCAwIFNUQVJUQk9Y
XUBADQpAWw0KMCBTUCAwIFNFVFRBQg0KMTEgU1AgMSBTRVRUQUINCjMzIFNQIDIgU0VUVEFCDQox
MSBTUCAzIFNFVFRBQg0KMzMgU1AgNCBTRVRUQUINCjExIFNQIDUgU0VUVEFCDQowIFNQIDYgU0VU
VEFCDQowIFNQIDcgU0VUVEFCDQowIFNQIDggU0VUVEFCDQpdQEANCjAgMzUuNCBtb3ZldG8NClso
SW5pdGlhbHMgICBTaWduYXR1cmUgICAgICAgICAgICAgICAgIEluaXRpYWxzICAgU2lnbmF0dXJl
ICAgICAgICAgICAgICAgICBJbml0aWFscyAgIFNpZ25hdHVyZSAgICldU0ZBDQovUEdfV0lEVEgg
cnBvcyBkZWYNCjM0IFBHX0hMDQowIDIxIG1vdmV0bw0KWyggICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgKV0gU0ZBDQowLiAtMy4gQENSDQowIEVOREJPWCsNCjAuIDMuIEBD
UiANCjAgLTMgcm1vdmV0bw0KMjUgQFtUQUJfVkJdQEANCn1kZWYNCi9TSUdfQkxPQ0syIHsNCjAg
LTYgbW92ZXRvDQpAWzAgMCBTVEFSVEJPWF1AQA0KQFsNCjAgU1AgMCBTRVRUQUINCjExIFNQIDEg
U0VUVEFCDQozMyBTUCAyIFNFVFRBQg0KMTEgU1AgMyBTRVRUQUINCjAgU1AgNCBTRVRUQUINCjAg
U1AgNSBTRVRUQUINCjAgU1AgNiBTRVRUQUINCjAgU1AgNyBTRVRUQUINCjAgU1AgOCBTRVRUQUIN
Cl1AQA0KMCAxMSBtb3ZldG8NClsoSW5pdGlhbHMgICBTaWduYXR1cmUgICAgICAgICAgICAgICAg
IEluaXRpYWxzICAgU2lnbmF0dXJlICAgICAgICAgICAgICAgICApXVNGQQ0KL1BHX1dJRFRIICgg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICkgU1cgMyBzdWIgZGVmL24NCjkgUEdfSEwNCjAgMjEgbW92ZXRvDQpb
KCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgKV0gU0ZBDQpAWy0zLjUgLTMgRU5EQk9YXUBAIA0KLTEgLTMgcm1v
dmV0bw0KLTI0IEBbVEFCX1ZCXUBADQp9ZGVmDQovU0hBREVfVEhJU19CT1gNCnsyIGJlZ2luDQpn
c2F2ZQ0Kc2V0Z3JheQ0KZHVwIHNldGxpbmV3aWR0aA0KMCBleGNoDQotLjUgbXVsIHJtb3ZldG8J
CSUgbW92ZSB0byB2ZXJ0aWNhbCBjZW50ZXIgb2YgdGhlIGJveA0KZXhjaAkJCQklIG1vdmUgbGVm
dF90YWIgdG8gdG9wIG9mIHN0YWNrDQpkdXAgLTEgZXEJCQklIGdldCBsZWZ0LWhhbmQgbWFyZ2lu
IHBvc2l0aW9uDQp7cG9wIDAJfSANCntAW0dFVF9UQUJfUE9TXUBAIH0gDQppZmVsc2UNCmV4Y2gJ
CQkJJSBtb3ZlIHJpZ2h0X3RhYiB0byB0b3Agb2Ygc3RhY2sNCmR1cCAtMSBlcQkJCSUgZ2V0IHJp
Z2h0LWhhbmQgbWFyZ2luIHBvc2l0aW9uDQp7cG9wIHJwb3MgfQ0Ke0BbR0VUX1RBQl9QT1NdQEAg
fSANCmlmZWxzZQ0KZXhjaCBDWSBtb3ZldG8JCSUgbW92ZSB0byBsZWZ0LWhhbmQgbWFyZ2luCQkN
CmV4Y2ggMSBlcQkJCSUgc2hpZnQgb3ZlciBSSFMgbGluZSBvZiBib3gNCnstNSBhZGQgCQkJDQp9
aWYNCkNZIGxpbmV0bwkJCSUgZHJhdyBsaW5lIHRvIHJpZ2h0LWhhbmQgbWFyZ2luDQpzdHJva2UN
CmdyZXN0b3JlDQplbmQNCn1ESUNUIGJpbmQgZGVmDQovSFY5IC9IZWx2ZXRpY2EgOS4gTkVXRk9O
VCBIVjkgc2V0Zm9udA0KL1NIIHsgbW92ZXRvIHNob3cgfSBiaW5kIGRlZg0KL3Zwb3MgNjkxLjYg
ZGVmDQovaHBvcyA1NC4wIGRlZg0KL3Zob2xkIDY5MS42IGRlZg0KL3Zob2xkJyA2NzMuMCBkZWYN
Ci9oaG9sZCA1NC4wIGRlZg0KL2hob2xkJyAyNy4wIGRlZg0KL2Jwb3MgMC4wIGRlZg0KL3Jwb3Mg
NTMxLjAgZGVmDQovcnBhZ2UgNTU4IGRlZg0KJSVFbmRQcm9sb2cNCiUgZGJfZmV0Y2hhIG9mIHBh
dGllbnRzIFdIRVJFIEZBQ0lMSVRZX0lEPScwMScgQU5EIFBBVElFTlRfSUQ9JzEwMjA0MzkzJw0K
JSBkYmFzZV9yZXQgPSAwLCBuX3BhdHMgPSAxDQolJVBhZ2U6IDEgMQ0KL1BBVF9ST09NICAgKDQ5
MDctMCkgZGVmDQovUEFUX0FETSAgICAoMDcvMDIvMTIgMDY6MTcpIGRlZg0KL05NX1BBVElFTlQg
KFJJVENISUUsIFdJTkZSRUQpZGVmDQovTk1fUEFUSUVOVF9DTElQUEVEIChSSVRDSElFLCBXSU5G
UkVEKWRlZg0KL1BBVF9BR0UgKDY0WSlkZWYNCi9QQVRfU0VYIChNKWRlZg0KL1BBVF9JRCAoMTAy
MDQzOTMpZGVmDQovUEFUX0RPQiAoMDgvMTAvMTk0NylkZWYNCi9QQVRfTVIgKDg3NzQyMSlkZWYN
Ci9OTV9ET0NUT1IgKEhVVFRPTiBNQVggIE1ELCAyMTgpZGVmDQovRFJfVElUTEUgKE1EKWRlZg0K
L09QVF9PVVQgKClkZWYNCi9ERVBUX0lEICg0VClkZWYNCi9OTV9SRVBPUlQgKE9yZGVyIENvbmZp
cm1hdGlvbiBSZXBvcnQpZGVmDQovTk1fRkFDIChBbGxlZ2lhbmNlIEhlYWx0aClkZWYNCi9SRVFf
SUQgKDE1Njk5KWRlZg0KL1JFUV9JTklUSUFMUyAoSk1STilkZWYNCi9SRVFfTkFNRSAoTUNDUlVN
LCBKRVNTSUNBKWRlZg0KL1JFUV9USVRMRSAoU0hJRlQgU1VQKWRlZg0KL0ZSX0RUVE0gICAgKDA3
LzAxLzEyIDE2OjI2KSBkZWYNCi9UT19EVFRNICAgICgwNy8wMi8xMiAxNjoyNikgZGVmDQovUkVR
VUVTVEVEICAoMDcvMDIvMTIgMTY6MjYpIGRlZg0KL3Zwb3MgNjkxLjYgZGVmDQovaHBvcyA1NC4w
IGRlZg0KL3Zob2xkIDY5MS42IGRlZg0KL3Zob2xkJyA2NzMuMCBkZWYNCi9oaG9sZCA1NC4wIGRl
Zg0KL2hob2xkJyAyNy4wIGRlZg0KL2Jwb3MgMC4wIGRlZg0KL3Jwb3MgNTMxLjAgZGVmDQovcnBh
Z2UgNTU4IGRlZg0KaHBvcyB2cG9zIG1vdmV0bw0KL1BHTk8gMSBkZWYNCkBbMS4wIFpPT01dQEAN
CkBbIC9GT05UIC9Db3VyaWVyIDguMDAgTkVXRk9OVCBGT05UXUBADQovQFBIIHsNCjAuIC0yOC44
IEBDUg0KfSBkZWYNCi9PUkRFUkVEX0JZIChNRCBIVVRUT04gTUFYICBNRCwgMjE4ICkgZGVmDQov
UEFHRVJfTlVNQkVSICggKSBkZWYNCi9FTlRFUkVEX0FVVEggKEVudGVyZWQgYnk6IFNISUZUIFNV
UCBNQ0NSVU0sIEpFU1NJQ0EgKSBkZWYNCi9FTlRFUkVEX09OICgwNy8wMi8xMiAxNjoyNiApIGRl
Zg0KL09SREVSX1RZUEUgKFBob25lICkgZGVmDQovU0VTU0lPTl9JRCAoMTU0MzE1MjIgKSBkZWYN
CkBbIC9GT05UIC9Db3VyaWVyIDcuMDAgTkVXRk9OVCBGT05UXUBADQovQEJIMSB7DQowLiAtOC40
IEBDUg0KMC4gOC40IEBDUg0KMC4gLTguNCBAQ1INCkBbDQowIFRBQiANCiggKQ0KL0ZPTlQgL0Nv
dXJpZXItQm9sZCA3IE5FV0ZPTlQgRk9OVA0KKEFMTEVSR1kpDQovRk9OVCAvQ291cmllciA3IE5F
V0ZPTlQgRk9OVA0KXUBADQowLiA4LjQgQENSDQovRU5EQk9YKyBsb2FkIDAgZ2V0IGJlZ2luDQov
VEFCTk8gLTEuMDAgZGVmDQovVkJPT0wgMCBDQm9vbCBkZWYNCi9IQk9PTCAwIENCb29sICBkZWYg
IGVuZA0KQFsvWUJPWFMgQ1kgMC4wMCBhZGQgZGVmICAwLjAgMC4wMCBTVEFSVEJPWF1AQCANCjAu
IC04LjQgQENSDQowLiAtMi4gQENSDQowIEVOREJPWCsNCjAuIC00LjIgQENSDQp9IGRlZg0KQFtD
TEVBUl9UQUJTXUBADQpjdXJyZW50cG9pbnQgL2N1clkgZXhjaCBkZWYgcG9wICAwLjAgY3VyWSBt
b3ZldG8NCkBbDQowIFNQIDAgU0VUVEFCDQoxMiBTUCAxIFNFVFRBQg0KMzEgU1AgMiBTRVRUQUIN
CjEzIFNQIDMgU0VUVEFCDQozMSBTUCA0IFNFVFRBQg0KOSBTUCA1IFNFVFRBQg0KXUBADQowLjAg
Y3VyWSBtb3ZldG8NCmhwb3MgMTguIHRyYW5zbGF0ZSAwLiB2cG9zIG1vdmV0bw0KL1BHX1dJRFRI
IDUyMi4wIGRlZg0KQFBIDQpAU1ZfRk9OVA0KQEJIMSANCkBSU19GT05UDQowLiA1Ljg4IEBDUg0K
L0BCSDEgew0KMC4gLTguNCBAQ1INCjAuIDguNCBAQ1INCjAuIC04LjQgQENSDQpAWw0KMCBUQUIg
DQooICkNCi9GT05UIC9Db3VyaWVyLUJvbGQgNyBORVdGT05UIEZPTlQNCihBTExFUkdZIFwoY29u
dFwpKQ0KL0ZPTlQgL0NvdXJpZXIgNyBORVdGT05UIEZPTlQNCl1AQA0KMC4gOC40IEBDUg0KL0VO
REJPWCsgbG9hZCAwIGdldCBiZWdpbg0KL1RBQk5PIC0xLjAwIGRlZg0KL1ZCT09MIDAgQ0Jvb2wg
ZGVmDQovSEJPT0wgMCBDQm9vbCAgZGVmICBlbmQNCkBbL1lCT1hTIENZIDAuMDAgYWRkIGRlZiAg
MC4wIDAuMDAgU1RBUlRCT1hdQEAgDQowLiAtOC40IEBDUg0KMC4gLTIuIEBDUg0KMCBFTkRCT1gr
DQowLiAtNC4yIEBDUg0KfSBkZWYNCjAuIC04LjQgQENSDQpAWw0KMCBUQUIgDQooQ2hhcnRlZCkN
CjEgVEFCIA0KKEFsbGVyZ3kgbmFtZSkNCjIgVEFCIA0KKFR5cGUpDQozIFRBQiANCihSZWFjdGlv
bikNCjQgVEFCIA0KKFNldmVyaXR5KQ0KNSBUQUIgDQooQ29tbWVudCkNCl1AQA0KMC4gLTguNCBA
Q1INCkBbDQowIFRBQiANCigxMC8yMyAxMToyMykNCjEgVEFCIA0KKE5LQSApDQoyIFRBQiANCihE
cnVnIEFsbGVyZ3kpDQozIFRBQiANCjQgVEFCIA0KNSBUQUIgDQpdQEANCi9AQkgwIHsNCn0gZGVm
DQovQEJIMCB7DQp9IGRlZg0KL0BCSDEgew0KfSBkZWYNCkBbIC9GT05UIC9Db3VyaWVyIDguMDAg
TkVXRk9OVCBGT05UXUBADQowLiAtNC44IEBDUg0KL0BCSDEgew0KMC4gLTkuNiBAQ1INCjAuIDku
NiBAQ1INCjAuIC05LjYgQENSDQpAWw0KMCBUQUIgDQooICkNCi9GT05UIC9Db3VyaWVyLUJvbGQg
OCBORVdGT05UIEZPTlQNCihESUFHTk9TSVMpDQovRk9OVCAvQ291cmllciA4IE5FV0ZPTlQgRk9O
VA0KXUBADQowLiA5LjYgQENSDQovRU5EQk9YKyBsb2FkIDAgZ2V0IGJlZ2luDQovVEFCTk8gLTEu
MDAgZGVmDQovVkJPT0wgMCBDQm9vbCBkZWYNCi9IQk9PTCAwIENCb29sICBkZWYgIGVuZA0KQFsv
WUJPWFMgQ1kgMC4wMCBhZGQgZGVmICAwLjAgMC4wMCBTVEFSVEJPWF1AQCANCjAuIC05LjYgQENS
DQowLiAtMi4gQENSDQowIEVOREJPWCsNCjAuIC00LjggQENSDQp9IGRlZg0KQFtDTEVBUl9UQUJT
XUBADQpjdXJyZW50cG9pbnQgL2N1clkgZXhjaCBkZWYgcG9wICAwLjAgY3VyWSBtb3ZldG8NCkBb
DQowIFNQIDAgU0VUVEFCDQpdQEANCjAuMCBjdXJZIG1vdmV0bw0KQFNWX0ZPTlQNCkBCSDEgQEJI
MCANCkBSU19GT05UDQowLiA2LjcyIEBDUg0KL0BCSDEgew0KMC4gLTkuNiBAQ1INCjAuIDkuNiBA
Q1INCjAuIC05LjYgQENSDQpAWw0KMCBUQUIgDQooICkNCi9GT05UIC9Db3VyaWVyLUJvbGQgOCBO
RVdGT05UIEZPTlQNCihESUFHTk9TSVMgXChjb250XCkpDQovRk9OVCAvQ291cmllciA4IE5FV0ZP
TlQgRk9OVA0KXUBADQowLiA5LjYgQENSDQovRU5EQk9YKyBsb2FkIDAgZ2V0IGJlZ2luDQovVEFC
Tk8gLTEuMDAgZGVmDQovVkJPT0wgMCBDQm9vbCBkZWYNCi9IQk9PTCAwIENCb29sICBkZWYgIGVu
ZA0KQFsvWUJPWFMgQ1kgMC4wMCBhZGQgZGVmICAwLjAgMC4wMCBTVEFSVEJPWF1AQCANCjAuIC05
LjYgQENSDQowLiAtMi4gQENSDQowIEVOREJPWCsNCjAuIC00LjggQENSDQp9IGRlZg0KQFtDTEVB
Ul9UQUJTXUBADQpjdXJyZW50cG9pbnQgL2N1clkgZXhjaCBkZWYgcG9wICAwLjAgY3VyWSBtb3Zl
dG8NCkBbDQowIFNQIDAgU0VUVEFCDQpdQEANCjAuMCBjdXJZIG1vdmV0bw0KMC4gLTkuNiBAQ1IN
CkBbDQowIFRBQiANCihBTkdJT0dSQU0gTEVGVCBGRU1PUkFMIEFDQ1hFU1MgV0lUSCBQT1NTKQ0K
XUBADQovQEJIMCB7DQp9IGRlZg0KL0BCSDEgew0KfSBkZWYNCjAuIC00LjggQENSDQpAWyAvRk9O
VCAvQ291cmllciA3LjAwIE5FV0ZPTlQgRk9OVF1AQA0KQFsgL0ZPTlQgL0NvdXJpZXIgMTAuMDAg
TkVXRk9OVCBGT05UXUBADQpjdXJyZW50cG9pbnQgL2N1clkgZXhjaCBkZWYgcG9wICAwLjAgY3Vy
WSBtb3ZldG8NCkBbDQowIFNQIDAgU0VUVEFCDQpdQEANCjAuMCBjdXJZIG1vdmV0bw0KMC4gLTEy
LiBAQ1INCkBbDQowIFRBQiANCi9GT05UIC9Db3VyaWVyLUJvbGQgMTAgTkVXRk9OVCBGT05UDQoo
UEhSTSkNCi9GT05UIC9Db3VyaWVyIDEwIE5FV0ZPTlQgRk9OVA0KXUBADQowLiAtMi4xIEBDUg0K
QFtDTEVBUl9UQUJTXUBADQpAWyAvRk9OVCAvQ291cmllciA3LjAwIE5FV0ZPTlQgRk9OVF1AQA0K
L0BCSDEgew0KMC4gLTguNCBAQ1INCjAuIDguNCBAQ1INCjAuIC04LjQgQENSDQpAWw0KMCBUQUIg
DQooICkNCi9GT05UIC9Db3VyaWVyLUJvbGQgNyBORVdGT05UIEZPTlQNCihPcmQjKQ0KMSBUQUIg
DQooQWN0aW9uKQ0KMiBUQUIgDQooT3JkZXIgTmFtZSkNCjMgVEFCIA0KKEZyZXEpDQo0IFRBQiAN
CihQcmlvcml0eSkNCjUgVEFCIA0KKER1cmF0aW9uKQ0KNiBUQUIgDQooU3RhcnQpDQo3IFRBQiAN
CihTdG9wKQ0KOCBUQUIgDQooICAgICAgICAgICAgICAgICAgICApDQovRk9OVCAvQ291cmllciA3
IE5FV0ZPTlQgRk9OVA0KXUBADQowLiA4LjQgQENSDQovRU5EQk9YKyBsb2FkIDAgZ2V0IGJlZ2lu
DQovVEFCTk8gLTEuMDAgZGVmDQovVkJPT0wgMCBDQm9vbCBkZWYNCi9IQk9PTCAwIENCb29sICBk
ZWYgIGVuZA0KQFsvWUJPWFMgQ1kgMC4wMCBhZGQgZGVmICAwLjAgMC4wMCBTVEFSVEJPWF1AQCAN
CjAuIC04LjQgQENSDQowLiAtMi4gQENSDQowIEVOREJPWCsNCjAuIC00LjIgQENSDQp9IGRlZg0K
Y3VycmVudHBvaW50IC9jdXJZIGV4Y2ggZGVmIHBvcCAgMC4wIGN1clkgbW92ZXRvDQpAWw0KMCBT
UCAwIFNFVFRBQg0KNiBTUCAxIFNFVFRBQg0KMTEgU1AgMiBTRVRUQUINCjM3IFNQIDMgU0VUVEFC
DQoxNyBTUCA0IFNFVFRBQg0KMjEgU1AgNSBTRVRUQUINCjEwIFNQIDYgU0VUVEFCDQoxMiBTUCA3
IFNFVFRBQg0KMjAgU1AgOCBTRVRUQUINCl1AQA0KMC4wIGN1clkgbW92ZXRvDQpAU1ZfRk9OVA0K
QEJIMSBAQkgwIA0KQFJTX0ZPTlQNCi9AQkgxIHsNCjAuIC04LjQgQENSDQowLiA4LjQgQENSDQow
LiAtOC40IEBDUg0KQFsNCjAgVEFCIA0KKCApDQovRk9OVCAvQ291cmllci1Cb2xkIDcgTkVXRk9O
VCBGT05UDQooT3JkIyApDQoxIFRBQiANCihBY3Rpb24pDQoyIFRBQiANCihPcmRlciBOYW1lKQ0K
MyBUQUIgDQooRnJlcSkNCjQgVEFCIA0KKFByaW9yaXR5KQ0KNSBUQUIgDQooRHVyYXRpb24pDQo2
IFRBQiANCihTdGFydCkNCjcgVEFCIA0KKFN0b3ApDQovRk9OVCAvQ291cmllciA3IE5FV0ZPTlQg
Rk9OVA0KXUBADQowLiA4LjQgQENSDQovRU5EQk9YKyBsb2FkIDAgZ2V0IGJlZ2luDQovVEFCTk8g
LTEuMDAgZGVmDQovVkJPT0wgMCBDQm9vbCBkZWYNCi9IQk9PTCAwIENCb29sICBkZWYgIGVuZA0K
QFswIFRBQiAvWUJPWFMgQ1kgMC4wMCBhZGQgZGVmICAwLjAgMC4wMCBTVEFSVEJPWF1AQCANCjAu
IC04LjQgQENSDQowLiAtMi4gQENSDQowIEVOREJPWCsNCjAuIC00LjIgQENSDQp9IGRlZg0KMC4g
NS44OCBAQ1INCkBbIC9GT05UIC9Db3VyaWVyIDcuMDAgTkVXRk9OVCBGT05UXUBADQpjdXJyZW50
cG9pbnQgL2N1clkgZXhjaCBkZWYgcG9wICAwLjAgY3VyWSBtb3ZldG8NCkBbDQowIFNQIDAgU0VU
VEFCDQo2IFNQIDEgU0VUVEFCDQoxMSBTUCAyIFNFVFRBQg0KMzcgU1AgMyBTRVRUQUINCjE3IFNQ
IDQgU0VUVEFCDQoyMSBTUCA1IFNFVFRBQg0KMTAgU1AgNiBTRVRUQUINCjEyIFNQIDcgU0VUVEFC
DQoyMCBTUCA4IFNFVFRBQg0KXUBADQowLjAgY3VyWSBtb3ZldG8NCjAuIC0xMi4gQENSDQpAWw0K
MCBUQUIgDQovRk9OVCAvQ291cmllci1Cb2xkIDEwIE5FV0ZPTlQgRk9OVA0KKDE0KQ0KMSBUQUIg
DQovRk9OVCAvQ291cmllci1Cb2xkIDggTkVXRk9OVCBGT05UDQooRC9DJ2QpDQoyIFRBQiANCi9G
T05UIC9Db3VyaWVyIDggTkVXRk9OVCBGT05UDQooZ2xpcGl6aWRlIHRhYiBbR0xVQ09UUk9MXSAp
DQozIFRBQiANCi9GT05UIC9Db3VyaWVyIDcgTkVXRk9OVCBGT05UDQooQkVGT1JFIEJSRUFLRkFT
VCkNCjQgVEFCIA0KKFJUTiApDQo2IFRBQiANCigwNy8wMiAxMjowMCkNCjcgVEFCIA0KXUBADQow
LiAtOS42IEBDUg0KQFsNCjIgVEFCIA0KL0ZPTlQgL0NvdXJpZXItQm9sZCA4IE5FV0ZPTlQgRk9O
VA0KKFJlYXNvbiBmb3IgYWN0aW9uOiBDb250cmFpbmRpY2F0aW9ucykNCi9GT05UIC9Db3VyaWVy
IDYgTkVXRk9OVCBGT05UDQovRk9OVCAvQ291cmllciA3IE5FV0ZPTlQgRk9OVA0KXUBADQowLiAt
OS42IEBDUg0KQFsNCjIgVEFCIA0KL0ZPTlQgL0NvdXJpZXIgNiBORVdGT05UIEZPTlQNCiggKQ0K
L0ZPTlQgL0NvdXJpZXIgOCBORVdGT05UIEZPTlQNCihMT09LIEFMSUtFIFNPVU5EIEFMSUtFIERS
VUcgKQ0KL0ZPTlQgL0NvdXJpZXIgNyBORVdGT05UIEZPTlQNCl1AQA0KMC4gLTEwLjggQENSDQpA
Ww0KMSBUQUIgDQovRk9OVCAvQ291cmllciA2IE5FV0ZPTlQgRk9OVA0KKCAgICkNCi9GT05UIC9D
b3VyaWVyIDkgTkVXRk9OVCBGT05UDQooRG9zZTopDQovRk9OVCAvQ291cmllci1Cb2xkIDggTkVX
Rk9OVCBGT05UDQooIDEwIE1HKQ0KL0ZPTlQgL0NvdXJpZXIgNyBORVdGT05UIEZPTlQNCl1AQA0K
MC4gLTEwLjggQENSDQpAWw0KMSBUQUIgDQovRk9OVCAvQ291cmllciA2IE5FV0ZPTlQgRk9OVA0K
KCAgICkNCi9GT05UIC9Db3VyaWVyIDkgTkVXRk9OVCBGT05UDQooUm91dGU6KQ0KL0ZPTlQgL0Nv
dXJpZXItQm9sZCA4IE5FV0ZPTlQgRk9OVA0KKCBPUkFMICkNCi9GT05UIC9Db3VyaWVyIDcgTkVX
Rk9OVCBGT05UDQpdQEANCjAuIC0yLjEgQENSDQpAWyAvRk9OVCAvQ291cmllciA3LjAwIE5FV0ZP
TlQgRk9OVF1AQA0KY3VycmVudHBvaW50IC9jdXJZIGV4Y2ggZGVmIHBvcCAgMC4wIGN1clkgbW92
ZXRvDQpAWw0KMCBTUCAwIFNFVFRBQg0KNiBTUCAxIFNFVFRBQg0KMTEgU1AgMiBTRVRUQUINCjM3
IFNQIDMgU0VUVEFCDQoxNyBTUCA0IFNFVFRBQg0KMjEgU1AgNSBTRVRUQUINCjEwIFNQIDYgU0VU
VEFCDQoxMiBTUCA3IFNFVFRBQg0KMjAgU1AgOCBTRVRUQUINCl1AQA0KMC4wIGN1clkgbW92ZXRv
DQowLiAtMTIuIEBDUg0KQFsNCjAgVEFCIA0KL0ZPTlQgL0NvdXJpZXItQm9sZCAxMCBORVdGT05U
IEZPTlQNCigxOSkNCjEgVEFCIA0KL0ZPTlQgL0NvdXJpZXItQm9sZCA4IE5FV0ZPTlQgRk9OVA0K
KEQvQydkKQ0KMiBUQUIgDQovRk9OVCAvQ291cmllciA4IE5FV0ZPTlQgRk9OVA0KKG1ldGZvcm1p
biB0YWIgW0dMVUNPUEhBR0VdICkNCjMgVEFCIA0KL0ZPTlQgL0NvdXJpZXIgNyBORVdGT05UIEZP
TlQNCihDQUxMIFBIQVJNQUNZKQ0KNCBUQUIgDQooUlROICkNCjYgVEFCIA0KKDA3LzAyIDEyOjAw
KQ0KNyBUQUIgDQpdQEANCjAuIC05LjYgQENSDQpAWw0KMiBUQUIgDQovRk9OVCAvQ291cmllci1C
b2xkIDggTkVXRk9OVCBGT05UDQooUmVhc29uIGZvciBhY3Rpb246IENvbnRyYWluZGljYXRpb25z
KQ0KL0ZPTlQgL0NvdXJpZXIgNiBORVdGT05UIEZPTlQNCi9GT05UIC9Db3VyaWVyIDcgTkVXRk9O
VCBGT05UDQpdQEANCjAuIC05LjYgQENSDQpAWw0KMiBUQUIgDQovRk9OVCAvQ291cmllciA2IE5F
V0ZPTlQgRk9OVA0KKCApDQovRk9OVCAvQ291cmllciA4IE5FV0ZPTlQgRk9OVA0KKE5FRUQgU1RS
RU5HVEggQU5EIFNDSEVEVUxFIFRJTUVTICkNCi9GT05UIC9Db3VyaWVyIDcgTkVXRk9OVCBGT05U
DQpdQEANCjAuIC0xMC44IEBDUg0KQFsNCjEgVEFCIA0KL0ZPTlQgL0NvdXJpZXIgNiBORVdGT05U
IEZPTlQNCiggICApDQovRk9OVCAvQ291cmllciA5IE5FV0ZPTlQgRk9OVA0KKERvc2U6KQ0KL0ZP
TlQgL0NvdXJpZXItQm9sZCA4IE5FV0ZPTlQgRk9OVA0KKCA1MDAgTUcpDQovRk9OVCAvQ291cmll
ciA3IE5FV0ZPTlQgRk9OVA0KXUBADQowLiAtMTAuOCBAQ1INCkBbDQoxIFRBQiANCi9GT05UIC9D
b3VyaWVyIDYgTkVXRk9OVCBGT05UDQooICAgKQ0KL0ZPTlQgL0NvdXJpZXIgOSBORVdGT05UIEZP
TlQNCihSb3V0ZTopDQovRk9OVCAvQ291cmllci1Cb2xkIDggTkVXRk9OVCBGT05UDQooIE9SQUwg
KQ0KL0ZPTlQgL0NvdXJpZXIgNyBORVdGT05UIEZPTlQNCl1AQA0KMC4gLTIuMSBAQ1INCkBbIC9G
T05UIC9Db3VyaWVyIDcuMDAgTkVXRk9OVCBGT05UXUBADQpjdXJyZW50cG9pbnQgL2N1clkgZXhj
aCBkZWYgcG9wICAwLjAgY3VyWSBtb3ZldG8NCkBbDQowIFNQIDAgU0VUVEFCDQo2IFNQIDEgU0VU
VEFCDQoxMSBTUCAyIFNFVFRBQg0KMzcgU1AgMyBTRVRUQUINCjE3IFNQIDQgU0VUVEFCDQoyMSBT
UCA1IFNFVFRBQg0KMTAgU1AgNiBTRVRUQUINCjEyIFNQIDcgU0VUVEFCDQoyMCBTUCA4IFNFVFRB
Qg0KXUBADQowLjAgY3VyWSBtb3ZldG8NCjAuIC0xMi4gQENSDQpAWw0KMCBUQUIgDQovRk9OVCAv
Q291cmllci1Cb2xkIDEwIE5FV0ZPTlQgRk9OVA0KKDcyKQ0KMSBUQUIgDQovRk9OVCAvQ291cmll
ci1Cb2xkIDggTkVXRk9OVCBGT05UDQooU3RhcnRlZCkNCjIgVEFCIA0KKGFjZXR5bGN5c3RlaW5l
IHNvbCBbTVVDT01ZU1RdICkNCjMgVEFCIA0KL0ZPTlQgL0NvdXJpZXIgNyBORVdGT05UIEZPTlQN
CihUV0lDRSBBIERBWSkNCjQgVEFCIA0KL0ZPTlQgL0NvdXJpZXItQm9sZCA5IE5FV0ZPTlQgRk9O
VA0KKFNUQVQgKQ0KL0ZPTlQgL0NvdXJpZXIgNyBORVdGT05UIEZPTlQNCjUgVEFCIA0KKDQgRG9z
ZXMpDQo2IFRBQiANCigwNy8wMiAxNjoyNCkNCjcgVEFCIA0KKDA3LzAzIDIxOjAwKQ0KXUBADQow
LiAtOS42IEBDUg0KQFsNCjIgVEFCIA0KL0ZPTlQgL0NvdXJpZXIgNiBORVdGT05UIEZPTlQNCigg
KQ0KL0ZPTlQgL0NvdXJpZXIgOCBORVdGT05UIEZPTlQNCiguLi5wdCBtYXkgdXNlIG93biBib3R0
bGUgZnJvbSBob21lICkNCi9GT05UIC9Db3VyaWVyIDcgTkVXRk9OVCBGT05UDQpdQEANCjAuIC0x
MC44IEBDUg0KQFsNCjEgVEFCIA0KL0ZPTlQgL0NvdXJpZXIgNiBORVdGT05UIEZPTlQNCiggICAp
DQovRk9OVCAvQ291cmllciA5IE5FV0ZPTlQgRk9OVA0KKERvc2U6KQ0KL0ZPTlQgL0NvdXJpZXIt
Qm9sZCA4IE5FV0ZPTlQgRk9OVA0KKCA2MDAgTUcpDQovRk9OVCAvQ291cmllciA3IE5FV0ZPTlQg
Rk9OVA0KXUBADQowLiAtMTAuOCBAQ1INCkBbDQoxIFRBQiANCi9GT05UIC9Db3VyaWVyIDYgTkVX
Rk9OVCBGT05UDQooICAgKQ0KL0ZPTlQgL0NvdXJpZXIgOSBORVdGT05UIEZPTlQNCihSb3V0ZTop
DQovRk9OVCAvQ291cmllci1Cb2xkIDggTkVXRk9OVCBGT05UDQooIE9SQUwgKQ0KL0ZPTlQgL0Nv
dXJpZXIgNyBORVdGT05UIEZPTlQNCl1AQA0KMC4gLTIuMSBAQ1INCkBbIC9GT05UIC9Db3VyaWVy
IDcuMDAgTkVXRk9OVCBGT05UXUBADQpjdXJyZW50cG9pbnQgL2N1clkgZXhjaCBkZWYgcG9wICAw
LjAgY3VyWSBtb3ZldG8NCkBbDQowIFNQIDAgU0VUVEFCDQo2IFNQIDEgU0VUVEFCDQoxMSBTUCAy
IFNFVFRBQg0KMzcgU1AgMyBTRVRUQUINCjE3IFNQIDQgU0VUVEFCDQoyMSBTUCA1IFNFVFRBQg0K
MTAgU1AgNiBTRVRUQUINCjEyIFNQIDcgU0VUVEFCDQoyMCBTUCA4IFNFVFRBQg0KXUBADQowLjAg
Y3VyWSBtb3ZldG8NCjAuIC0xMi4gQENSDQpAWw0KMCBUQUIgDQovRk9OVCAvQ291cmllci1Cb2xk
IDEwIE5FV0ZPTlQgRk9OVA0KKDc0KQ0KMSBUQUIgDQovRk9OVCAvQ291cmllci1Cb2xkIDggTkVX
Rk9OVCBGT05UDQooQWN0aXZlKQ0KMiBUQUIgDQooaW5zdWxpbiBhc3AgaW5qIFtIVU1BTE9HXSAp
DQozIFRBQiANCi9GT05UIC9Db3VyaWVyIDcgTkVXRk9OVCBGT05UDQooU1MgRVZFUlkgOCBIT1VS
KQ0KNCBUQUIgDQooTkVYVCBTQ0ggKQ0KNSBUQUIgDQo2IFRBQiANCigwNy8wMiAyMjowMCkNCjcg
VEFCIA0KKEluZGVmaW5pdGUpDQpdQEANCjAuIC05LjYgQENSDQpAWw0KMiBUQUIgDQovRk9OVCAv
Q291cmllciA2IE5FV0ZPTlQgRk9OVA0KKCApDQovRk9OVCAvQ291cmllciA4IE5FV0ZPTlQgRk9O
VA0KKEluc3VsaW4gU2xpZGluZyBTY2FsZSBBOiA8IDcwID0gRk9MTE9XIEhZUE9HTFlDRU1JQSBQ
Uk9UT0NPTDsgMTUxLTIwMCA9IE5PIEluc3VsaW47ICkNCi9GT05UIC9Db3VyaWVyIDcgTkVXRk9O
VCBGT05UDQpdQEANCjAuIC05LjYgQENSDQpAWw0KMiBUQUIgDQovRk9OVCAvQ291cmllciA2IE5F
V0ZPTlQgRk9OVA0KKCApDQovRk9OVCAvQ291cmllciA4IE5FV0ZPTlQgRk9OVA0KKDIwMS0yNTAg
PSAzIFVuaXRzOyAyNTEtMzAwID0gNiBVbml0czsgMzAxLTM1MCA9IDkgVW5pdHM7IDM1MS00MDAg
PSAxMiBVbml0czsgPiA0MDAgPSApDQovRk9OVCAvQ291cmllciA3IE5FV0ZPTlQgRk9OVA0KXUBA
DQowLiAtOS42IEBDUg0KQFsNCjIgVEFCIA0KL0ZPTlQgL0NvdXJpZXIgNiBORVdGT05UIEZPTlQN
CiggKQ0KL0ZPTlQgL0NvdXJpZXIgOCBORVdGT05UIEZPTlQNCigxNSBVbml0cyBhbmQgQ2FsbCBN
RCApDQovRk9OVCAvQ291cmllciA3IE5FV0ZPTlQgRk9OVA0KXUBADQowLiAtMTAuOCBAQ1INCkBb
DQoxIFRBQiANCi9GT05UIC9Db3VyaWVyIDYgTkVXRk9OVCBGT05UDQooICAgKQ0KL0ZPTlQgL0Nv
dXJpZXIgOSBORVdGT05UIEZPTlQNCihEb3NlOikNCi9GT05UIC9Db3VyaWVyLUJvbGQgOCBORVdG
T05UIEZPTlQNCiggMSBVTklUUykNCi9GT05UIC9Db3VyaWVyIDcgTkVXRk9OVCBGT05UDQpdQEAN
CjAuIC0xMC44IEBDUg0KQFsNCjEgVEFCIA0KL0ZPTlQgL0NvdXJpZXIgNiBORVdGT05UIEZPTlQN
CiggICApDQovRk9OVCAvQ291cmllciA5IE5FV0ZPTlQgRk9OVA0KKFJvdXRlOikNCi9GT05UIC9D
b3VyaWVyLUJvbGQgOCBORVdGT05UIEZPTlQNCiggU1VCUSApDQovRk9OVCAvQ291cmllciA3IE5F
V0ZPTlQgRk9OVA0KXUBADQowLiAtMi4xIEBDUg0KQFsgL0ZPTlQgL0NvdXJpZXIgMTAuMDAgTkVX
Rk9OVCBGT05UXUBADQpjdXJyZW50cG9pbnQgL2N1clkgZXhjaCBkZWYgcG9wICAwLjAgY3VyWSBt
b3ZldG8NCkBbDQowIFNQIDAgU0VUVEFCDQpdQEANCjAuMCBjdXJZIG1vdmV0bw0KMC4gLTEyLiBA
Q1INCkBbDQowIFRBQiANCi9GT05UIC9Db3VyaWVyLUJvbGQgMTAgTkVXRk9OVCBGT05UDQooVFJU
KQ0KL0ZPTlQgL0NvdXJpZXIgMTAgTkVXRk9OVCBGT05UDQpdQEANCjAuIC0yLjEgQENSDQpAW0NM
RUFSX1RBQlNdQEANCkBbIC9GT05UIC9Db3VyaWVyIDcuMDAgTkVXRk9OVCBGT05UXUBADQovQEJI
MSB7DQowLiAtOC40IEBDUg0KMC4gOC40IEBDUg0KMC4gLTguNCBAQ1INCkBbDQowIFRBQiANCigg
KQ0KL0ZPTlQgL0NvdXJpZXItQm9sZCA3IE5FV0ZPTlQgRk9OVA0KKE9yZCMpDQoxIFRBQiANCihB
Y3Rpb24pDQoyIFRBQiANCihPcmRlciBOYW1lKQ0KMyBUQUIgDQooRnJlcSkNCjQgVEFCIA0KKFBy
aW9yaXR5KQ0KNSBUQUIgDQooRHVyYXRpb24pDQo2IFRBQiANCihTdGFydCkNCjcgVEFCIA0KKFN0
b3ApDQo4IFRBQiANCiggICAgICAgICAgICAgICAgICAgICkNCi9GT05UIC9Db3VyaWVyIDcgTkVX
Rk9OVCBGT05UDQpdQEANCjAuIDguNCBAQ1INCi9FTkRCT1grIGxvYWQgMCBnZXQgYmVnaW4NCi9U
QUJOTyAtMS4wMCBkZWYNCi9WQk9PTCAwIENCb29sIGRlZg0KL0hCT09MIDAgQ0Jvb2wgIGRlZiAg
ZW5kDQpAWy9ZQk9YUyBDWSAwLjAwIGFkZCBkZWYgIDAuMCAwLjAwIFNUQVJUQk9YXUBAIA0KMC4g
LTguNCBAQ1INCjAuIC0yLiBAQ1INCjAgRU5EQk9YKw0KMC4gLTQuMiBAQ1INCn0gZGVmDQpjdXJy
ZW50cG9pbnQgL2N1clkgZXhjaCBkZWYgcG9wICAwLjAgY3VyWSBtb3ZldG8NCkBbDQowIFNQIDAg
U0VUVEFCDQo2IFNQIDEgU0VUVEFCDQoxMSBTUCAyIFNFVFRBQg0KMzcgU1AgMyBTRVRUQUINCjE3
IFNQIDQgU0VUVEFCDQoyMSBTUCA1IFNFVFRBQg0KMTAgU1AgNiBTRVRUQUINCjEyIFNQIDcgU0VU
VEFCDQoyMCBTUCA4IFNFVFRBQg0KXUBADQowLjAgY3VyWSBtb3ZldG8NCkBTVl9GT05UDQpAQkgx
IEBCSDAgDQpAUlNfRk9OVA0KL0BCSDEgew0KMC4gLTguNCBAQ1INCjAuIDguNCBAQ1INCjAuIC04
LjQgQENSDQpAWw0KMCBUQUIgDQooICkNCi9GT05UIC9Db3VyaWVyLUJvbGQgNyBORVdGT05UIEZP
TlQNCihPcmQjICkNCjEgVEFCIA0KKEFjdGlvbikNCjIgVEFCIA0KKE9yZGVyIE5hbWUpDQozIFRB
QiANCihGcmVxKQ0KNCBUQUIgDQooUHJpb3JpdHkpDQo1IFRBQiANCihEdXJhdGlvbikNCjYgVEFC
IA0KKFN0YXJ0KQ0KNyBUQUIgDQooU3RvcCkNCi9GT05UIC9Db3VyaWVyIDcgTkVXRk9OVCBGT05U
DQpdQEANCjAuIDguNCBAQ1INCi9FTkRCT1grIGxvYWQgMCBnZXQgYmVnaW4NCi9UQUJOTyAtMS4w
MCBkZWYNCi9WQk9PTCAwIENCb29sIGRlZg0KL0hCT09MIDAgQ0Jvb2wgIGRlZiAgZW5kDQpAWzAg
VEFCIC9ZQk9YUyBDWSAwLjAwIGFkZCBkZWYgIDAuMCAwLjAwIFNUQVJUQk9YXUBAIA0KMC4gLTgu
NCBAQ1INCjAuIC0yLiBAQ1INCjAgRU5EQk9YKw0KMC4gLTQuMiBAQ1INCn0gZGVmDQowLiA1Ljg4
IEBDUg0KQFsgL0ZPTlQgL0NvdXJpZXIgNy4wMCBORVdGT05UIEZPTlRdQEANCmN1cnJlbnRwb2lu
dCAvY3VyWSBleGNoIGRlZiBwb3AgIDAuMCBjdXJZIG1vdmV0bw0KQFsNCjAgU1AgMCBTRVRUQUIN
CjYgU1AgMSBTRVRUQUINCjExIFNQIDIgU0VUVEFCDQozNyBTUCAzIFNFVFRBQg0KMTcgU1AgNCBT
RVRUQUINCjIxIFNQIDUgU0VUVEFCDQoxMCBTUCA2IFNFVFRBQg0KMTIgU1AgNyBTRVRUQUINCjIw
IFNQIDggU0VUVEFCDQpdQEANCjAuMCBjdXJZIG1vdmV0bw0KMC4gLTEyLiBAQ1INCkBbDQowIFRB
QiANCi9GT05UIC9Db3VyaWVyLUJvbGQgMTAgTkVXRk9OVCBGT05UDQooNzMpDQoxIFRBQiANCi9G
T05UIC9Db3VyaWVyLUJvbGQgOCBORVdGT05UIEZPTlQNCihTdGFydGVkKQ0KMiBUQUIgDQooQUND
VUNIRUNLICkNCjMgVEFCIA0KL0ZPTlQgL0NvdXJpZXIgNyBORVdGT05UIEZPTlQNCihROEgpDQo0
IFRBQiANCihST1VUSU5FICkNCjUgVEFCIA0KNiBUQUIgDQooMDcvMDIgMTY6MjYpDQo3IFRBQiAN
CihJbmRlZmluaXRlKQ0KXUBADQowLiAtOC40IEBDUg0KL0BCSDAgew0KfSBkZWYNCi9AQkgxIHsN
Cn0gZGVmDQowLiAtNC4yIEBDUg0KQFtDTEVBUl9UQUJTXUBADQpAU1ZfRk9OVA0KQEJIMSBAQkgw
IA0KQFJTX0ZPTlQNCmhwb3MgNjcuMCBtb3ZldG8NCjAuIC04LjQgQENSDQpAWw0KL0ZPTlQgL0Nv
dXJpZXIgNyBORVdGT05UIEZPTlQNCig9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PSkNCl1AQA0KMC4gLTguNCBAQ1INCkBbIC9GT05U
IC9Db3VyaWVyIDguMDAgTkVXRk9OVCBGT05UXUBADQowLiAtOS42IEBDUg0KQFsNCi9GT05UIC9D
b3VyaWVyLUJvbGQgOCBORVdGT05UIEZPTlQNCihQcm9jZXNzZWQgYXQgXChkYXRlXCk6IF9fX19f
X19fX19fX18gIFwodGltZVwpX19fXzpfX19fXyBieSBcKGluaXRpYWxcKTpfX19fX19fX19fX19f
X19fX19fXykNCi9GT05UIC9Db3VyaWVyIDggTkVXRk9OVCBGT05UDQpdQEANCjAuIC05LjYgQENS
DQowLiAtOS42IEBDUg0KQFsNCi9GT05UIC9Db3VyaWVyLUJvbGQgOCBORVdGT05UIEZPTlQNCihS
TiBWZXJpZmljYXRpb24gYXQgXChkYXRlXCk6IF9fX19fX19fX19fX18gXCh0aW1lXClfX19fOl9f
X19fIGJ5IFwoaW5pdGlhbFwpOl9fX19fX19fX19fX19fX19fX19fICkNCi9GT05UIC9Db3VyaWVy
IDggTkVXRk9OVCBGT05UDQpdQEANCjAuIC05LjYgQENSDQowLiAtNC44IEBDUg0KL0BCSDAgew0K
fSBkZWYNCi9AQkgxIHsNCn0gZGVmDQovQEJIMSB7DQowLiAtOC40IEBDUg0KMC4gOC40IEBDUg0K
MC4gLTkuNiBAQ1INCkBbDQowIFRBQiANCiggKQ0KL0ZPTlQgL0NvdXJpZXItQm9sZCA3IE5FV0ZP
TlQgRk9OVA0KKCApDQovRk9OVCAvQ291cmllciA4IE5FV0ZPTlQgRk9OVA0KXUBADQowLiAtNC4y
IEBDUg0KfSBkZWYNCjAuIDkuNiBAQ1INCjEyLiBPUkRFUk5PVEVTX0hFQURFUiAwIEZTX0RFTUJM
SyANCkhWMTAgc2V0Zm9udCBbKExBU1QgUEFHRSldIDUgUEdfQ0VOVEVSDQpQRVJNX0JMSw0KZ3Nh
dmUNCmN1cnJlbnRmb250IEhWQjEwIHNldGZvbnQNClggLTQwIGFkZCA1IG1vdmV0bw0KKFBhZ2Ug
MSkNCnNob3cNCnNldGZvbnQNCmdyZXN0b3JlDQpzaG93cGFnZQ0KJSVQYWdlVHJhaWxlcg0KZW5k
DQolJVRyYWlsZXINCiUldGhpc1dhc1RoZVByZXZpb3VzU3RhcnQNCiVtcm4lODc3NDIxDQolZmFj
JTAxDQolZ3BpJQ0KJWVuYyUxMDIwNDM5Mw0KJWRhdGUlMDcvMDEvMTJeMTY6MjYNCiVyZXBvcnRf
dHlwZSVQQ00NCiVyZXBvcnRfc3VidGl0bGUlT3JkZXIgQ29uZmlybWF0aW9uIFJlcG9ydCAgICAg
DQolcGh5c19pZDElICAgDQolcGh5c19pZDIlICAgDQolJVBhZ2VzOiAxDQolJUVPRg0KXV0+PC9w
c0ZpbGVCeXRlcz4NCiAgICA8cGRmRmlsZU5hbWUvPg0KPC9yZXBvcnQ+DQo=</inboundTemplate>
    <inboundProtocol>XML</inboundProtocol>
    <outboundProtocol>XML</outboundProtocol>
    <inboundProperties>
      <property name="stripNamespaces">true</property>
    </inboundProperties>
    <outboundProperties>
      <property name="stripNamespaces">true</property>
    </outboundProperties>
  </transformer>
  <filter>
    <rules>
      <rule>
        <sequenceNumber>0</sequenceNumber>
        <name>Accept message if &quot;msg[&apos;report_type&apos;].toString()&quot; equals &apos;HECACR&apos;</name>
        <data class="map">
          <entry>
            <string>Values</string>
            <list>
              <string>&apos;HECACR&apos;</string>
            </list>
          </entry>
          <entry>
            <string>Name</string>
            <string></string>
          </entry>
          <entry>
            <string>Field</string>
            <string>msg[&apos;report_type&apos;].toString()</string>
          </entry>
          <entry>
            <string>OriginalField</string>
            <string></string>
          </entry>
          <entry>
            <string>Equals</string>
            <string>1</string>
          </entry>
        </data>
        <type>Rule Builder</type>
        <script>if(msg[&apos;report_type&apos;].toString() == &apos;HECACR&apos;)
{
return true;
}
return false;</script>
        <operator>NONE</operator>
      </rule>
    </rules>
  </filter>
  <transportName>File Writer</transportName>
  <mode>DESTINATION</mode>
  <enabled>false</enabled>
  <version>2.1.1.5490</version>
</connector>